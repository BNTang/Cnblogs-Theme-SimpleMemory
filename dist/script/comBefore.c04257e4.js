(self.webpackChunkCnblogs_Theme_SimpleMemory=self.webpackChunkCnblogs_Theme_SimpleMemory||[]).push([["comBefore"],{"./node_modules/exports-loader/dist/cjs.js?exports=rebound,Spinner!./src/vendor/loading/loading.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/exports-loader/dist/cjs.js?exports=rebound,Spinner!./src/vendor/loading/loading.js ***!
  \*********************************************************************************************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Spinner\": function() { return /* binding */ Spinner; },\n/* harmony export */   \"rebound\": function() { return /* binding */ rebound; }\n/* harmony export */ });\n\r\n\r\n// Rebound\r\n// =======\r\n// **Rebound** is a simple library that models Spring dynamics for the\r\n// purpose of driving physical animations.\r\n//\r\n// Origin\r\n// ------\r\n// [Rebound](http://facebook.github.io/rebound) was originally written\r\n// in Java to provide a lightweight physics system for\r\n// [Home](https://play.google.com/store/apps/details?id=com.facebook.home) and\r\n// [Chat Heads](https://play.google.com/store/apps/details?id=com.facebook.orca)\r\n// on Android. It's now been adopted by several other Android\r\n// applications. This JavaScript port was written to provide a quick\r\n// way to demonstrate Rebound animations on the web for a\r\n// [conference talk](https://www.youtube.com/watch?v=s5kNm-DgyjY). Since then\r\n// the JavaScript version has been used to build some really nice interfaces.\r\n// Check out [brandonwalkin.com](http://brandonwalkin.com) for an\r\n// example.\r\n//\r\n// Overview\r\n// --------\r\n// The Library provides a SpringSystem for maintaining a set of Spring\r\n// objects and iterating those Springs through a physics solver loop\r\n// until equilibrium is achieved. The Spring class is the basic\r\n// animation driver provided by Rebound. By attaching a listener to\r\n// a Spring, you can observe its motion. The observer function is\r\n// notified of position changes on the spring as it solves for\r\n// equilibrium. These position updates can be mapped to an animation\r\n// range to drive animated property updates on your user interface\r\n// elements (translation, rotation, scale, etc).\r\n//\r\n// Example\r\n// -------\r\n// Here's a simple example. Pressing and releasing on the logo below\r\n// will cause it to scale up and down with a springy animation.\r\n//\r\n// <div style=\"text-align:center; margin-bottom:50px; margin-top:50px\">\r\n//   <img\r\n//     src=\"http://facebook.github.io/rebound/images/rebound.png\"\r\n//     id=\"logo\"\r\n//   />\r\n// </div>\r\n// <script src=\"../rebound.min.js\"><\/script>\r\n// <script>\r\n//\r\n// function scale(el, val) {\r\n//   el.style.mozTransform =\r\n//   el.style.msTransform =\r\n//   el.style.webkitTransform =\r\n//   el.style.transform = 'scale3d(' + val + ', ' + val + ', 1)';\r\n// }\r\n// var el = document.getElementById('logo');\r\n//\r\n// var springSystem = new rebound.SpringSystem();\r\n// var spring = springSystem.createSpring(50, 3);\r\n// spring.addListener({\r\n//   onSpringUpdate: function(spring) {\r\n//     var val = spring.getCurrentValue();\r\n//     val = rebound.MathUtil.mapValueInRange(val, 0, 1, 1, 0.5);\r\n//     scale(el, val);\r\n//   }\r\n// });\r\n//\r\n// el.addEventListener('mousedown', function() {\r\n//   spring.setEndValue(1);\r\n// });\r\n//\r\n// el.addEventListener('mouseout', function() {\r\n//   spring.setEndValue(0);\r\n// });\r\n//\r\n// el.addEventListener('mouseup', function() {\r\n//   spring.setEndValue(0);\r\n// });\r\n//\r\n// <\/script>\r\n//\r\n// Here's how it works.\r\n//\r\n// ```\r\n// // Get a reference to the logo element.\r\n// var el = document.getElementById('logo');\r\n//\r\n// // create a SpringSystem and a Spring with a bouncy config.\r\n// var springSystem = new rebound.SpringSystem();\r\n// var spring = springSystem.createSpring(50, 3);\r\n//\r\n// // Add a listener to the spring. Every time the physics\r\n// // solver updates the Spring's value onSpringUpdate will\r\n// // be called.\r\n// spring.addListener({\r\n//   onSpringUpdate: function(spring) {\r\n//     var val = spring.getCurrentValue();\r\n//     val = rebound.MathUtil\r\n//                  .mapValueInRange(val, 0, 1, 1, 0.5);\r\n//     scale(el, val);\r\n//   }\r\n// });\r\n//\r\n// // Listen for mouse down/up/out and toggle the\r\n// //springs endValue from 0 to 1.\r\n// el.addEventListener('mousedown', function() {\r\n//   spring.setEndValue(1);\r\n// });\r\n//\r\n// el.addEventListener('mouseout', function() {\r\n//   spring.setEndValue(0);\r\n// });\r\n//\r\n// el.addEventListener('mouseup', function() {\r\n//   spring.setEndValue(0);\r\n// });\r\n//\r\n// // Helper for scaling an element with css transforms.\r\n// function scale(el, val) {\r\n//   el.style.mozTransform =\r\n//   el.style.msTransform =\r\n//   el.style.webkitTransform =\r\n//   el.style.transform = 'scale3d(' +\r\n//     val + ', ' + val + ', 1)';\r\n// }\r\n// ```\r\nvar rebound = {};\r\n(function () {\r\n    var util = rebound.util = {};\r\n    var concat = Array.prototype.concat;\r\n    var slice = Array.prototype.slice;\r\n\r\n    // Bind a function to a context object.\r\n    util.bind = function bind(func, context) {\r\n        var args = slice.call(arguments, 2);\r\n        return function () {\r\n            func.apply(context, concat.call(args, slice.call(arguments)));\r\n        };\r\n    };\r\n\r\n    // Add all the properties in the source to the target.\r\n    util.extend = function extend(target, source) {\r\n        for (var key in source) {\r\n            if (source.hasOwnProperty(key)) {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    };\r\n\r\n    // SpringSystem\r\n    // ------------\r\n    // **SpringSystem** is a set of Springs that all run on the same physics\r\n    // timing loop. To get started with a Rebound animation you first\r\n    // create a new SpringSystem and then add springs to it.\r\n    var SpringSystem = rebound.SpringSystem = function SpringSystem(looper) {\r\n        this._springRegistry = {};\r\n        this._activeSprings = [];\r\n        this.listeners = [];\r\n        this._idleSpringIndices = [];\r\n        this.looper = looper || new AnimationLooper();\r\n        this.looper.springSystem = this;\r\n    };\r\n\r\n    util.extend(SpringSystem.prototype, {\r\n\r\n        _springRegistry: null,\r\n\r\n        _isIdle: true,\r\n\r\n        _lastTimeMillis: -1,\r\n\r\n        _activeSprings: null,\r\n\r\n        listeners: null,\r\n\r\n        _idleSpringIndices: null,\r\n\r\n        // A SpringSystem is iterated by a looper. The looper is responsible\r\n        // for executing each frame as the SpringSystem is resolved to idle.\r\n        // There are three types of Loopers described below AnimationLooper,\r\n        // SimulationLooper, and SteppingSimulationLooper. AnimationLooper is\r\n        // the default as it is the most useful for common UI animations.\r\n        setLooper: function setLooper(looper) {\r\n            this.looper = looper;\r\n            looper.springSystem = this;\r\n        },\r\n\r\n        // Add a new spring to this SpringSystem. This Spring will now be solved for\r\n        // during the physics iteration loop. By default the spring will use the\r\n        // default Origami spring config with 40 tension and 7 friction, but you can\r\n        // also provide your own values here.\r\n        createSpring: function createSpring(tension, friction) {\r\n            var springConfig;\r\n            if (tension === undefined || friction === undefined) {\r\n                springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\r\n            } else {\r\n                springConfig = SpringConfig.fromOrigamiTensionAndFriction(tension, friction);\r\n            }\r\n            return this.createSpringWithConfig(springConfig);\r\n        },\r\n\r\n        // Add a spring with a specified bounciness and speed. To replicate Origami\r\n        // compositions based on PopAnimation patches, use this factory method to\r\n        // create matching springs.\r\n        createSpringWithBouncinessAndSpeed: function createSpringWithBouncinessAndSpeed(bounciness, speed) {\r\n            var springConfig;\r\n            if (bounciness === undefined || speed === undefined) {\r\n                springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\r\n            } else {\r\n                springConfig = SpringConfig.fromBouncinessAndSpeed(bounciness, speed);\r\n            }\r\n            return this.createSpringWithConfig(springConfig);\r\n        },\r\n\r\n        // Add a spring with the provided SpringConfig.\r\n        createSpringWithConfig: function createSpringWithConfig(springConfig) {\r\n            var spring = new Spring(this);\r\n            this.registerSpring(spring);\r\n            spring.setSpringConfig(springConfig);\r\n            return spring;\r\n        },\r\n\r\n        // You can check if a SpringSystem is idle or active by calling\r\n        // getIsIdle. If all of the Springs in the SpringSystem are at rest,\r\n        // i.e. the physics forces have reached equilibrium, then this\r\n        // method will return true.\r\n        getIsIdle: function getIsIdle() {\r\n            return this._isIdle;\r\n        },\r\n\r\n        // Retrieve a specific Spring from the SpringSystem by id. This\r\n        // can be useful for inspecting the state of a spring before\r\n        // or after an integration loop in the SpringSystem executes.\r\n        getSpringById: function getSpringById(id) {\r\n            return this._springRegistry[id];\r\n        },\r\n\r\n        // Get a listing of all the springs registered with this\r\n        // SpringSystem.\r\n        getAllSprings: function getAllSprings() {\r\n            var vals = [];\r\n            for (var id in this._springRegistry) {\r\n                if (this._springRegistry.hasOwnProperty(id)) {\r\n                    vals.push(this._springRegistry[id]);\r\n                }\r\n            }\r\n            return vals;\r\n        },\r\n\r\n        // registerSpring is called automatically as soon as you create\r\n        // a Spring with SpringSystem#createSpring. This method sets the\r\n        // spring up in the registry so that it can be solved in the\r\n        // solver loop.\r\n        registerSpring: function registerSpring(spring) {\r\n            this._springRegistry[spring.getId()] = spring;\r\n        },\r\n\r\n        // Deregister a spring with this SpringSystem. The SpringSystem will\r\n        // no longer consider this Spring during its integration loop once\r\n        // this is called. This is normally done automatically for you when\r\n        // you call Spring#destroy.\r\n        deregisterSpring: function deregisterSpring(spring) {\r\n            removeFirst(this._activeSprings, spring);\r\n            delete this._springRegistry[spring.getId()];\r\n        },\r\n\r\n        advance: function advance(time, deltaTime) {\r\n            while (this._idleSpringIndices.length > 0) {\r\n                this._idleSpringIndices.pop();\r\n            }for (var i = 0, len = this._activeSprings.length; i < len; i++) {\r\n                var spring = this._activeSprings[i];\r\n                if (spring.systemShouldAdvance()) {\r\n                    spring.advance(time / 1000.0, deltaTime / 1000.0);\r\n                } else {\r\n                    this._idleSpringIndices.push(this._activeSprings.indexOf(spring));\r\n                }\r\n            }\r\n            while (this._idleSpringIndices.length > 0) {\r\n                var idx = this._idleSpringIndices.pop();\r\n                idx >= 0 && this._activeSprings.splice(idx, 1);\r\n            }\r\n        },\r\n\r\n        // This is our main solver loop called to move the simulation\r\n        // forward through time. Before each pass in the solver loop\r\n        // onBeforeIntegrate is called on an any listeners that have\r\n        // registered themeselves with the SpringSystem. This gives you\r\n        // an opportunity to apply any constraints or adjustments to\r\n        // the springs that should be enforced before each iteration\r\n        // loop. Next the advance method is called to move each Spring in\r\n        // the systemShouldAdvance forward to the current time. After the\r\n        // integration step runs in advance, onAfterIntegrate is called\r\n        // on any listeners that have registered themselves with the\r\n        // SpringSystem. This gives you an opportunity to run any post\r\n        // integration constraints or adjustments on the Springs in the\r\n        // SpringSystem.\r\n        loop: function loop(currentTimeMillis) {\r\n            var listener;\r\n            if (this._lastTimeMillis === -1) {\r\n                this._lastTimeMillis = currentTimeMillis - 1;\r\n            }\r\n            var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;\r\n            this._lastTimeMillis = currentTimeMillis;\r\n\r\n            var i = 0,\r\n                len = this.listeners.length;\r\n            for (i = 0; i < len; i++) {\r\n                listener = this.listeners[i];\r\n                listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);\r\n            }\r\n\r\n            this.advance(currentTimeMillis, ellapsedMillis);\r\n            if (this._activeSprings.length === 0) {\r\n                this._isIdle = true;\r\n                this._lastTimeMillis = -1;\r\n            }\r\n\r\n            for (i = 0; i < len; i++) {\r\n                listener = this.listeners[i];\r\n                listener.onAfterIntegrate && listener.onAfterIntegrate(this);\r\n            }\r\n\r\n            if (!this._isIdle) {\r\n                this.looper.run();\r\n            }\r\n        },\r\n\r\n        // activateSpring is used to notify the SpringSystem that a Spring\r\n        // has become displaced. The system responds by starting its solver\r\n        // loop up if it is currently idle.\r\n        activateSpring: function activateSpring(springId) {\r\n            var spring = this._springRegistry[springId];\r\n            if (this._activeSprings.indexOf(spring) == -1) {\r\n                this._activeSprings.push(spring);\r\n            }\r\n            if (this.getIsIdle()) {\r\n                this._isIdle = false;\r\n                this.looper.run();\r\n            }\r\n        },\r\n\r\n        // Add a listener to the SpringSystem so that you can receive\r\n        // before/after integration notifications allowing Springs to be\r\n        // constrained or adjusted.\r\n        addListener: function addListener(listener) {\r\n            this.listeners.push(listener);\r\n        },\r\n\r\n        // Remove a previously added listener on the SpringSystem.\r\n        removeListener: function removeListener(listener) {\r\n            removeFirst(this.listeners, listener);\r\n        },\r\n\r\n        // Remove all previously added listeners on the SpringSystem.\r\n        removeAllListeners: function removeAllListeners() {\r\n            this.listeners = [];\r\n        }\r\n\r\n    });\r\n\r\n    // Spring\r\n    // ------\r\n    // **Spring** provides a model of a classical spring acting to\r\n    // resolve a body to equilibrium. Springs have configurable\r\n    // tension which is a force multipler on the displacement of the\r\n    // spring from its rest point or `endValue` as defined by [Hooke's\r\n    // law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have\r\n    // configurable friction, which ensures that they do not oscillate\r\n    // infinitely. When a Spring is displaced by updating it's resting\r\n    // or `currentValue`, the SpringSystems that contain that Spring\r\n    // will automatically start looping to solve for equilibrium. As each\r\n    // timestep passes, `SpringListener` objects attached to the Spring\r\n    // will be notified of the updates providing a way to drive an\r\n    // animation off of the spring's resolution curve.\r\n    var Spring = rebound.Spring = function Spring(springSystem) {\r\n        this._id = 's' + Spring._ID++;\r\n        this._springSystem = springSystem;\r\n        this.listeners = [];\r\n        this._currentState = new PhysicsState();\r\n        this._previousState = new PhysicsState();\r\n        this._tempState = new PhysicsState();\r\n    };\r\n\r\n    util.extend(Spring, {\r\n        _ID: 0,\r\n\r\n        MAX_DELTA_TIME_SEC: 0.064,\r\n\r\n        SOLVER_TIMESTEP_SEC: 0.001\r\n\r\n    });\r\n\r\n    util.extend(Spring.prototype, {\r\n\r\n        _id: 0,\r\n\r\n        _springConfig: null,\r\n\r\n        _overshootClampingEnabled: false,\r\n\r\n        _currentState: null,\r\n\r\n        _previousState: null,\r\n\r\n        _tempState: null,\r\n\r\n        _startValue: 0,\r\n\r\n        _endValue: 0,\r\n\r\n        _wasAtRest: true,\r\n\r\n        _restSpeedThreshold: 0.001,\r\n\r\n        _displacementFromRestThreshold: 0.001,\r\n\r\n        listeners: null,\r\n\r\n        _timeAccumulator: 0,\r\n\r\n        _springSystem: null,\r\n\r\n        // Remove a Spring from simulation and clear its listeners.\r\n        destroy: function destroy() {\r\n            this.listeners = [];\r\n            this.frames = [];\r\n            this._springSystem.deregisterSpring(this);\r\n        },\r\n\r\n        // Get the id of the spring, which can be used to retrieve it from\r\n        // the SpringSystems it participates in later.\r\n        getId: function getId() {\r\n            return this._id;\r\n        },\r\n\r\n        // Set the configuration values for this Spring. A SpringConfig\r\n        // contains the tension and friction values used to solve for the\r\n        // equilibrium of the Spring in the physics loop.\r\n        setSpringConfig: function setSpringConfig(springConfig) {\r\n            this._springConfig = springConfig;\r\n            return this;\r\n        },\r\n\r\n        // Retrieve the SpringConfig used by this Spring.\r\n        getSpringConfig: function getSpringConfig() {\r\n            return this._springConfig;\r\n        },\r\n\r\n        // Set the current position of this Spring. Listeners will be updated\r\n        // with this value immediately. If the rest or `endValue` is not\r\n        // updated to match this value, then the spring will be dispalced and\r\n        // the SpringSystem will start to loop to restore the spring to the\r\n        // `endValue`.\r\n        //\r\n        // A common pattern is to move a Spring around without animation by\r\n        // calling.\r\n        //\r\n        // ```\r\n        // spring.setCurrentValue(n).setAtRest();\r\n        // ```\r\n        //\r\n        // This moves the Spring to a new position `n`, sets the endValue\r\n        // to `n`, and removes any velocity from the `Spring`. By doing\r\n        // this you can allow the `SpringListener` to manage the position\r\n        // of UI elements attached to the spring even when moving without\r\n        // animation. For example, when dragging an element you can\r\n        // update the position of an attached view through a spring\r\n        // by calling `spring.setCurrentValue(x)`. When\r\n        // the gesture ends you can update the Springs\r\n        // velocity and endValue\r\n        // `spring.setVelocity(gestureEndVelocity).setEndValue(flingTarget)`\r\n        // to cause it to naturally animate the UI element to the resting\r\n        // position taking into account existing velocity. The codepaths for\r\n        // synchronous movement and spring driven animation can\r\n        // be unified using this technique.\r\n        setCurrentValue: function setCurrentValue(currentValue, skipSetAtRest) {\r\n            this._startValue = currentValue;\r\n            this._currentState.position = currentValue;\r\n            if (!skipSetAtRest) {\r\n                this.setAtRest();\r\n            }\r\n            this.notifyPositionUpdated(false, false);\r\n            return this;\r\n        },\r\n\r\n        // Get the position that the most recent animation started at. This\r\n        // can be useful for determining the number off oscillations that\r\n        // have occurred.\r\n        getStartValue: function getStartValue() {\r\n            return this._startValue;\r\n        },\r\n\r\n        // Retrieve the current value of the Spring.\r\n        getCurrentValue: function getCurrentValue() {\r\n            return this._currentState.position;\r\n        },\r\n\r\n        // Get the absolute distance of the Spring from it's resting endValue\r\n        // position.\r\n        getCurrentDisplacementDistance: function getCurrentDisplacementDistance() {\r\n            return this.getDisplacementDistanceForState(this._currentState);\r\n        },\r\n\r\n        getDisplacementDistanceForState: function getDisplacementDistanceForState(state) {\r\n            return Math.abs(this._endValue - state.position);\r\n        },\r\n\r\n        // Set the endValue or resting position of the spring. If this\r\n        // value is different than the current value, the SpringSystem will\r\n        // be notified and will begin running its solver loop to resolve\r\n        // the Spring to equilibrium. Any listeners that are registered\r\n        // for onSpringEndStateChange will also be notified of this update\r\n        // immediately.\r\n        setEndValue: function setEndValue(endValue) {\r\n            if (this._endValue == endValue && this.isAtRest()) {\r\n                return this;\r\n            }\r\n            this._startValue = this.getCurrentValue();\r\n            this._endValue = endValue;\r\n            this._springSystem.activateSpring(this.getId());\r\n            for (var i = 0, len = this.listeners.length; i < len; i++) {\r\n                var listener = this.listeners[i];\r\n                var onChange = listener.onSpringEndStateChange;\r\n                onChange && onChange(this);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        // Retrieve the endValue or resting position of this spring.\r\n        getEndValue: function getEndValue() {\r\n            return this._endValue;\r\n        },\r\n\r\n        // Set the current velocity of the Spring. As previously mentioned,\r\n        // this can be useful when you are performing a direct manipulation\r\n        // gesture. When a UI element is released you may call setVelocity\r\n        // on its animation Spring so that the Spring continues with the\r\n        // same velocity as the gesture ended with. The friction, tension,\r\n        // and displacement of the Spring will then govern its motion to\r\n        // return to rest on a natural feeling curve.\r\n        setVelocity: function setVelocity(velocity) {\r\n            if (velocity === this._currentState.velocity) {\r\n                return this;\r\n            }\r\n            this._currentState.velocity = velocity;\r\n            this._springSystem.activateSpring(this.getId());\r\n            return this;\r\n        },\r\n\r\n        // Get the current velocity of the Spring.\r\n        getVelocity: function getVelocity() {\r\n            return this._currentState.velocity;\r\n        },\r\n\r\n        // Set a threshold value for the movement speed of the Spring below\r\n        // which it will be considered to be not moving or resting.\r\n        setRestSpeedThreshold: function setRestSpeedThreshold(restSpeedThreshold) {\r\n            this._restSpeedThreshold = restSpeedThreshold;\r\n            return this;\r\n        },\r\n\r\n        // Retrieve the rest speed threshold for this Spring.\r\n        getRestSpeedThreshold: function getRestSpeedThreshold() {\r\n            return this._restSpeedThreshold;\r\n        },\r\n\r\n        // Set a threshold value for displacement below which the Spring\r\n        // will be considered to be not displaced i.e. at its resting\r\n        // `endValue`.\r\n        setRestDisplacementThreshold: function setRestDisplacementThreshold(displacementFromRestThreshold) {\r\n            this._displacementFromRestThreshold = displacementFromRestThreshold;\r\n        },\r\n\r\n        // Retrieve the rest displacement threshold for this spring.\r\n        getRestDisplacementThreshold: function getRestDisplacementThreshold() {\r\n            return this._displacementFromRestThreshold;\r\n        },\r\n\r\n        // Enable overshoot clamping. This means that the Spring will stop\r\n        // immediately when it reaches its resting position regardless of\r\n        // any existing momentum it may have. This can be useful for certain\r\n        // types of animations that should not oscillate such as a scale\r\n        // down to 0 or alpha fade.\r\n        setOvershootClampingEnabled: function setOvershootClampingEnabled(enabled) {\r\n            this._overshootClampingEnabled = enabled;\r\n            return this;\r\n        },\r\n\r\n        // Check if overshoot clamping is enabled for this spring.\r\n        isOvershootClampingEnabled: function isOvershootClampingEnabled() {\r\n            return this._overshootClampingEnabled;\r\n        },\r\n\r\n        // Check if the Spring has gone past its end point by comparing\r\n        // the direction it was moving in when it started to the current\r\n        // position and end value.\r\n        isOvershooting: function isOvershooting() {\r\n            var start = this._startValue;\r\n            var end = this._endValue;\r\n            return this._springConfig.tension > 0 && (start < end && this.getCurrentValue() > end || start > end && this.getCurrentValue() < end);\r\n        },\r\n\r\n        // Spring.advance is the main solver method for the Spring. It takes\r\n        // the current time and delta since the last time step and performs\r\n        // an RK4 integration to get the new position and velocity state\r\n        // for the Spring based on the tension, friction, velocity, and\r\n        // displacement of the Spring.\r\n        advance: function advance(time, realDeltaTime) {\r\n            var isAtRest = this.isAtRest();\r\n\r\n            if (isAtRest && this._wasAtRest) {\r\n                return;\r\n            }\r\n\r\n            var adjustedDeltaTime = realDeltaTime;\r\n            if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {\r\n                adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;\r\n            }\r\n\r\n            this._timeAccumulator += adjustedDeltaTime;\r\n\r\n            var tension = this._springConfig.tension,\r\n                friction = this._springConfig.friction,\r\n                position = this._currentState.position,\r\n                velocity = this._currentState.velocity,\r\n                tempPosition = this._tempState.position,\r\n                tempVelocity = this._tempState.velocity,\r\n                aVelocity,\r\n                aAcceleration,\r\n                bVelocity,\r\n                bAcceleration,\r\n                cVelocity,\r\n                cAcceleration,\r\n                dVelocity,\r\n                dAcceleration,\r\n                dxdt,\r\n                dvdt;\r\n\r\n            while (this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {\r\n\r\n                this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;\r\n\r\n                if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {\r\n                    this._previousState.position = position;\r\n                    this._previousState.velocity = velocity;\r\n                }\r\n\r\n                aVelocity = velocity;\r\n                aAcceleration = tension * (this._endValue - tempPosition) - friction * velocity;\r\n\r\n                tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\r\n                tempVelocity = velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\r\n                bVelocity = tempVelocity;\r\n                bAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\r\n\r\n                tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\r\n                tempVelocity = velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\r\n                cVelocity = tempVelocity;\r\n                cAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\r\n\r\n                tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\r\n                tempVelocity = velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\r\n                dVelocity = tempVelocity;\r\n                dAcceleration = tension * (this._endValue - tempPosition) - friction * tempVelocity;\r\n\r\n                dxdt = 1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);\r\n                dvdt = 1.0 / 6.0 * (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);\r\n\r\n                position += dxdt * Spring.SOLVER_TIMESTEP_SEC;\r\n                velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;\r\n            }\r\n\r\n            this._tempState.position = tempPosition;\r\n            this._tempState.velocity = tempVelocity;\r\n\r\n            this._currentState.position = position;\r\n            this._currentState.velocity = velocity;\r\n\r\n            if (this._timeAccumulator > 0) {\r\n                this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);\r\n            }\r\n\r\n            if (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) {\r\n\r\n                if (this._springConfig.tension > 0) {\r\n                    this._startValue = this._endValue;\r\n                    this._currentState.position = this._endValue;\r\n                } else {\r\n                    this._endValue = this._currentState.position;\r\n                    this._startValue = this._endValue;\r\n                }\r\n                this.setVelocity(0);\r\n                isAtRest = true;\r\n            }\r\n\r\n            var notifyActivate = false;\r\n            if (this._wasAtRest) {\r\n                this._wasAtRest = false;\r\n                notifyActivate = true;\r\n            }\r\n\r\n            var notifyAtRest = false;\r\n            if (isAtRest) {\r\n                this._wasAtRest = true;\r\n                notifyAtRest = true;\r\n            }\r\n\r\n            this.notifyPositionUpdated(notifyActivate, notifyAtRest);\r\n        },\r\n\r\n        notifyPositionUpdated: function notifyPositionUpdated(notifyActivate, notifyAtRest) {\r\n            for (var i = 0, len = this.listeners.length; i < len; i++) {\r\n                var listener = this.listeners[i];\r\n                if (notifyActivate && listener.onSpringActivate) {\r\n                    listener.onSpringActivate(this);\r\n                }\r\n\r\n                if (listener.onSpringUpdate) {\r\n                    listener.onSpringUpdate(this);\r\n                }\r\n\r\n                if (notifyAtRest && listener.onSpringAtRest) {\r\n                    listener.onSpringAtRest(this);\r\n                }\r\n            }\r\n        },\r\n\r\n        // Check if the SpringSystem should advance. Springs are advanced\r\n        // a final frame after they reach equilibrium to ensure that the\r\n        // currentValue is exactly the requested endValue regardless of the\r\n        // displacement threshold.\r\n        systemShouldAdvance: function systemShouldAdvance() {\r\n            return !this.isAtRest() || !this.wasAtRest();\r\n        },\r\n\r\n        wasAtRest: function wasAtRest() {\r\n            return this._wasAtRest;\r\n        },\r\n\r\n        // Check if the Spring is atRest meaning that it's currentValue and\r\n        // endValue are the same and that it has no velocity. The previously\r\n        // described thresholds for speed and displacement define the bounds\r\n        // of this equivalence check. If the Spring has 0 tension, then it will\r\n        // be considered at rest whenever its absolute velocity drops below the\r\n        // restSpeedThreshold.\r\n        isAtRest: function isAtRest() {\r\n            return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || this._springConfig.tension === 0);\r\n        },\r\n\r\n        // Force the spring to be at rest at its current position. As\r\n        // described in the documentation for setCurrentValue, this method\r\n        // makes it easy to do synchronous non-animated updates to ui\r\n        // elements that are attached to springs via SpringListeners.\r\n        setAtRest: function setAtRest() {\r\n            this._endValue = this._currentState.position;\r\n            this._tempState.position = this._currentState.position;\r\n            this._currentState.velocity = 0;\r\n            return this;\r\n        },\r\n\r\n        _interpolate: function _interpolate(alpha) {\r\n            this._currentState.position = this._currentState.position * alpha + this._previousState.position * (1 - alpha);\r\n            this._currentState.velocity = this._currentState.velocity * alpha + this._previousState.velocity * (1 - alpha);\r\n        },\r\n\r\n        getListeners: function getListeners() {\r\n            return this.listeners;\r\n        },\r\n\r\n        addListener: function addListener(newListener) {\r\n            this.listeners.push(newListener);\r\n            return this;\r\n        },\r\n\r\n        removeListener: function removeListener(listenerToRemove) {\r\n            removeFirst(this.listeners, listenerToRemove);\r\n            return this;\r\n        },\r\n\r\n        removeAllListeners: function removeAllListeners() {\r\n            this.listeners = [];\r\n            return this;\r\n        },\r\n\r\n        currentValueIsApproximately: function currentValueIsApproximately(value) {\r\n            return Math.abs(this.getCurrentValue() - value) <= this.getRestDisplacementThreshold();\r\n        }\r\n\r\n    });\r\n\r\n    // PhysicsState\r\n    // ------------\r\n    // **PhysicsState** consists of a position and velocity. A Spring uses\r\n    // this internally to keep track of its current and prior position and\r\n    // velocity values.\r\n    var PhysicsState = function PhysicsState() {};\r\n\r\n    util.extend(PhysicsState.prototype, {\r\n        position: 0,\r\n        velocity: 0\r\n    });\r\n\r\n    // SpringConfig\r\n    // ------------\r\n    // **SpringConfig** maintains a set of tension and friction constants\r\n    // for a Spring. You can use fromOrigamiTensionAndFriction to convert\r\n    // values from the [Origami](http://facebook.github.io/origami/)\r\n    // design tool directly to Rebound spring constants.\r\n    var SpringConfig = rebound.SpringConfig = function SpringConfig(tension, friction) {\r\n        this.tension = tension;\r\n        this.friction = friction;\r\n    };\r\n\r\n    // Loopers\r\n    // -------\r\n    // **AnimationLooper** plays each frame of the SpringSystem on animation\r\n    // timing loop. This is the default type of looper for a new spring system\r\n    // as it is the most common when developing UI.\r\n    var AnimationLooper = rebound.AnimationLooper = function AnimationLooper() {\r\n        this.springSystem = null;\r\n        var _this = this;\r\n        var _run = function _run() {\r\n            _this.springSystem.loop(Date.now());\r\n        };\r\n\r\n        this.run = function () {\r\n            util.onFrame(_run);\r\n        };\r\n    };\r\n\r\n    // **SimulationLooper** resolves the SpringSystem to a resting state in a\r\n    // tight and blocking loop. This is useful for synchronously generating\r\n    // pre-recorded animations that can then be played on a timing loop later.\r\n    // Sometimes this lead to better performance to pre-record a single spring\r\n    // curve and use it to drive many animations; however, it can make dynamic\r\n    // response to user input a bit trickier to implement.\r\n    rebound.SimulationLooper = function SimulationLooper(timestep) {\r\n        this.springSystem = null;\r\n        var time = 0;\r\n        var running = false;\r\n        timestep = timestep || 16.667;\r\n\r\n        this.run = function () {\r\n            if (running) {\r\n                return;\r\n            }\r\n            running = true;\r\n            while (!this.springSystem.getIsIdle()) {\r\n                this.springSystem.loop(time += timestep);\r\n            }\r\n            running = false;\r\n        };\r\n    };\r\n\r\n    // **SteppingSimulationLooper** resolves the SpringSystem one step at a\r\n    // time controlled by an outside loop. This is useful for testing and\r\n    // verifying the behavior of a SpringSystem or if you want to control your own\r\n    // timing loop for some reason e.g. slowing down or speeding up the\r\n    // simulation.\r\n    rebound.SteppingSimulationLooper = function (timestep) {\r\n        this.springSystem = null;\r\n        var time = 0;\r\n\r\n        // this.run is NOOP'd here to allow control from the outside using\r\n        // this.step.\r\n        this.run = function () {};\r\n\r\n        // Perform one step toward resolving the SpringSystem.\r\n        this.step = function (timestep) {\r\n            this.springSystem.loop(time += timestep);\r\n        };\r\n    };\r\n\r\n    // Math for converting from\r\n    // [Origami](http://facebook.github.io/origami/) to\r\n    // [Rebound](http://facebook.github.io/rebound).\r\n    // You mostly don't need to worry about this, just use\r\n    // SpringConfig.fromOrigamiTensionAndFriction(v, v);\r\n    var OrigamiValueConverter = rebound.OrigamiValueConverter = {\r\n        tensionFromOrigamiValue: function tensionFromOrigamiValue(oValue) {\r\n            return (oValue - 30.0) * 3.62 + 194.0;\r\n        },\r\n\r\n        origamiValueFromTension: function origamiValueFromTension(tension) {\r\n            return (tension - 194.0) / 3.62 + 30.0;\r\n        },\r\n\r\n        frictionFromOrigamiValue: function frictionFromOrigamiValue(oValue) {\r\n            return (oValue - 8.0) * 3.0 + 25.0;\r\n        },\r\n\r\n        origamiFromFriction: function origamiFromFriction(friction) {\r\n            return (friction - 25.0) / 3.0 + 8.0;\r\n        }\r\n    };\r\n\r\n    // BouncyConversion provides math for converting from Origami PopAnimation\r\n    // config values to regular Origami tension and friction values. If you are\r\n    // trying to replicate prototypes made with PopAnimation patches in Origami,\r\n    // then you should create your springs with\r\n    // SpringSystem.createSpringWithBouncinessAndSpeed, which uses this Math\r\n    // internally to create a spring to match the provided PopAnimation\r\n    // configuration from Origami.\r\n    var BouncyConversion = rebound.BouncyConversion = function (bounciness, speed) {\r\n        this.bounciness = bounciness;\r\n        this.speed = speed;\r\n        var b = this.normalize(bounciness / 1.7, 0, 20.0);\r\n        b = this.projectNormal(b, 0.0, 0.8);\r\n        var s = this.normalize(speed / 1.7, 0, 20.0);\r\n        this.bouncyTension = this.projectNormal(s, 0.5, 200);\r\n        this.bouncyFriction = this.quadraticOutInterpolation(b, this.b3Nobounce(this.bouncyTension), 0.01);\r\n    };\r\n\r\n    util.extend(BouncyConversion.prototype, {\r\n\r\n        normalize: function normalize(value, startValue, endValue) {\r\n            return (value - startValue) / (endValue - startValue);\r\n        },\r\n\r\n        projectNormal: function projectNormal(n, start, end) {\r\n            return start + n * (end - start);\r\n        },\r\n\r\n        linearInterpolation: function linearInterpolation(t, start, end) {\r\n            return t * end + (1.0 - t) * start;\r\n        },\r\n\r\n        quadraticOutInterpolation: function quadraticOutInterpolation(t, start, end) {\r\n            return this.linearInterpolation(2 * t - t * t, start, end);\r\n        },\r\n\r\n        b3Friction1: function b3Friction1(x) {\r\n            return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;\r\n        },\r\n\r\n        b3Friction2: function b3Friction2(x) {\r\n            return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2.;\r\n        },\r\n\r\n        b3Friction3: function b3Friction3(x) {\r\n            return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;\r\n        },\r\n\r\n        b3Nobounce: function b3Nobounce(tension) {\r\n            var friction = 0;\r\n            if (tension <= 18) {\r\n                friction = this.b3Friction1(tension);\r\n            } else if (tension > 18 && tension <= 44) {\r\n                friction = this.b3Friction2(tension);\r\n            } else {\r\n                friction = this.b3Friction3(tension);\r\n            }\r\n            return friction;\r\n        }\r\n    });\r\n\r\n    util.extend(SpringConfig, {\r\n        // Convert an origami Spring tension and friction to Rebound spring\r\n        // constants. If you are prototyping a design with Origami, this\r\n        // makes it easy to make your springs behave exactly the same in\r\n        // Rebound.\r\n        fromOrigamiTensionAndFriction: function fromOrigamiTensionAndFriction(tension, friction) {\r\n            return new SpringConfig(OrigamiValueConverter.tensionFromOrigamiValue(tension), OrigamiValueConverter.frictionFromOrigamiValue(friction));\r\n        },\r\n\r\n        // Convert an origami PopAnimation Spring bounciness and speed to Rebound\r\n        // spring constants. If you are using PopAnimation patches in Origami, this\r\n        // utility will provide springs that match your prototype.\r\n        fromBouncinessAndSpeed: function fromBouncinessAndSpeed(bounciness, speed) {\r\n            var bouncyConversion = new rebound.BouncyConversion(bounciness, speed);\r\n            return this.fromOrigamiTensionAndFriction(bouncyConversion.bouncyTension, bouncyConversion.bouncyFriction);\r\n        },\r\n\r\n        // Create a SpringConfig with no tension or a coasting spring with some\r\n        // amount of Friction so that it does not coast infininitely.\r\n        coastingConfigWithOrigamiFriction: function coastingConfigWithOrigamiFriction(friction) {\r\n            return new SpringConfig(0, OrigamiValueConverter.frictionFromOrigamiValue(friction));\r\n        }\r\n    });\r\n\r\n    SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = SpringConfig.fromOrigamiTensionAndFriction(40, 7);\r\n\r\n    util.extend(SpringConfig.prototype, { friction: 0, tension: 0 });\r\n\r\n    // Here are a couple of function to convert colors between hex codes and RGB\r\n    // component values. These are handy when performing color\r\n    // tweening animations.\r\n    var colorCache = {};\r\n    util.hexToRGB = function (color) {\r\n        if (colorCache[color]) {\r\n            return colorCache[color];\r\n        }\r\n        color = color.replace('#', '');\r\n        if (color.length === 3) {\r\n            color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\r\n        }\r\n        var parts = color.match(/.{2}/g);\r\n\r\n        var ret = {\r\n            r: parseInt(parts[0], 16),\r\n            g: parseInt(parts[1], 16),\r\n            b: parseInt(parts[2], 16)\r\n        };\r\n\r\n        colorCache[color] = ret;\r\n        return ret;\r\n    };\r\n\r\n    util.rgbToHex = function (r, g, b) {\r\n        r = r.toString(16);\r\n        g = g.toString(16);\r\n        b = b.toString(16);\r\n        r = r.length < 2 ? '0' + r : r;\r\n        g = g.length < 2 ? '0' + g : g;\r\n        b = b.length < 2 ? '0' + b : b;\r\n        return '#' + r + g + b;\r\n    };\r\n\r\n    var MathUtil = rebound.MathUtil = {\r\n        // This helper function does a linear interpolation of a value from\r\n        // one range to another. This can be very useful for converting the\r\n        // motion of a Spring to a range of UI property values. For example a\r\n        // spring moving from position 0 to 1 could be interpolated to move a\r\n        // view from pixel 300 to 350 and scale it from 0.5 to 1. The current\r\n        // position of the `Spring` just needs to be run through this method\r\n        // taking its input range in the _from_ parameters with the property\r\n        // animation range in the _to_ parameters.\r\n        mapValueInRange: function mapValueInRange(value, fromLow, fromHigh, toLow, toHigh) {\r\n            var fromRangeSize = fromHigh - fromLow;\r\n            var toRangeSize = toHigh - toLow;\r\n            var valueScale = (value - fromLow) / fromRangeSize;\r\n            return toLow + valueScale * toRangeSize;\r\n        },\r\n\r\n        // Interpolate two hex colors in a 0 - 1 range or optionally provide a\r\n        // custom range with fromLow,fromHight. The output will be in hex by default\r\n        // unless asRGB is true in which case it will be returned as an rgb string.\r\n        interpolateColor: function interpolateColor(val, startColor, endColor, fromLow, fromHigh, asRGB) {\r\n            fromLow = fromLow === undefined ? 0 : fromLow;\r\n            fromHigh = fromHigh === undefined ? 1 : fromHigh;\r\n            startColor = util.hexToRGB(startColor);\r\n            endColor = util.hexToRGB(endColor);\r\n            var r = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r));\r\n            var g = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g));\r\n            var b = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b));\r\n            if (asRGB) {\r\n                return 'rgb(' + r + ',' + g + ',' + b + ')';\r\n            } else {\r\n                return util.rgbToHex(r, g, b);\r\n            }\r\n        },\r\n\r\n        degreesToRadians: function degreesToRadians(deg) {\r\n            return deg * Math.PI / 180;\r\n        },\r\n\r\n        radiansToDegrees: function radiansToDegrees(rad) {\r\n            return rad * 180 / Math.PI;\r\n        }\r\n\r\n    };\r\n\r\n    util.extend(util, MathUtil);\r\n\r\n    // Utilities\r\n    // ---------\r\n    // Here are a few useful JavaScript utilities.\r\n\r\n    // Lop off the first occurence of the reference in the Array.\r\n    function removeFirst(array, item) {\r\n        var idx = array.indexOf(item);\r\n        idx != -1 && array.splice(idx, 1);\r\n    }\r\n\r\n    var _onFrame;\r\n    if (typeof window !== 'undefined') {\r\n        _onFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function (callback) {\r\n            window.setTimeout(callback, 1000 / 60);\r\n        };\r\n    }\r\n    if (!_onFrame && typeof process !== 'undefined' && process.title === 'node') {\r\n        _onFrame = setImmediate;\r\n    }\r\n\r\n    // Cross browser/node timer functions.\r\n    util.onFrame = function onFrame(func) {\r\n        return _onFrame(func);\r\n    };\r\n\r\n    // Export the public api using exports for common js or the window for\r\n    // normal browser inclusion.\r\n    if (typeof exports != 'undefined') {\r\n        util.extend(exports, rebound);\r\n    } else if (typeof window != 'undefined') {\r\n        window.rebound = rebound;\r\n    }\r\n})();\r\n\r\n// Legal Stuff\r\n// -----------\r\n/**\r\n *  Copyright (c) 2013, Facebook, Inc.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree. An additional grant\r\n *  of patent rights can be found in the PATENTS file in the same directory.\r\n */\r\n'use strict';\r\n\r\n/**\r\n * Polygon.\r\n * Create a regular polygon and provide api to compute inscribed child.\r\n */\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\n// function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nvar Polygon = function () {\r\n    function Polygon() {\r\n        var radius = arguments.length <= 0 || arguments[0] === undefined ? 100 : arguments[0];\r\n        var sides = arguments.length <= 1 || arguments[1] === undefined ? 3 : arguments[1];\r\n        var depth = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\r\n        var colors = arguments[3];\r\n\r\n        _classCallCheck(this, Polygon);\r\n\r\n        this._radius = radius;\r\n        this._sides = sides;\r\n        this._depth = depth;\r\n        this._colors = colors;\r\n\r\n        this._x = 0;\r\n        this._y = 0;\r\n\r\n        this.rotation = 0;\r\n        this.scale = 1;\r\n\r\n        // Get basePolygon points straight away.\r\n        this.points = this._getRegularPolygonPoints();\r\n    }\r\n\r\n    /**\r\n     * Get the points of any regular polygon based on\r\n     * the number of sides and radius.\r\n     */\r\n\r\n\r\n    _createClass(Polygon, [{\r\n        key: '_getRegularPolygonPoints',\r\n        value: function _getRegularPolygonPoints() {\r\n\r\n            var points = [];\r\n\r\n            var i = 0;\r\n\r\n            while (i < this._sides) {\r\n                // Note that sin and cos are inverted in order to draw\r\n                // polygon pointing down like: ∇\r\n                var x = -this._radius * Math.sin(i * 2 * Math.PI / this._sides);\r\n                var y = this._radius * Math.cos(i * 2 * Math.PI / this._sides);\r\n\r\n                points.push({ x: x, y: y });\r\n\r\n                i++;\r\n            }\r\n\r\n            return points;\r\n        }\r\n\r\n        /**\r\n         * Get the inscribed polygon points by calling `getInterpolatedPoint`\r\n         * for the points (start, end) of each side.\r\n         */\r\n\r\n    }, {\r\n        key: '_getInscribedPoints',\r\n        value: function _getInscribedPoints(points, progress) {\r\n            var _this = this;\r\n\r\n            var inscribedPoints = [];\r\n\r\n            points.forEach(function (item, i) {\r\n\r\n                var start = item;\r\n                var end = points[i + 1];\r\n\r\n                if (!end) {\r\n                    end = points[0];\r\n                }\r\n\r\n                var point = _this._getInterpolatedPoint(start, end, progress);\r\n\r\n                inscribedPoints.push(point);\r\n            });\r\n\r\n            return inscribedPoints;\r\n        }\r\n\r\n        /**\r\n         * Get interpolated point using linear interpolation\r\n         * on x and y axis.\r\n         */\r\n\r\n    }, {\r\n        key: '_getInterpolatedPoint',\r\n        value: function _getInterpolatedPoint(start, end, progress) {\r\n\r\n            var Ax = start.x;\r\n            var Ay = start.y;\r\n\r\n            var Bx = end.x;\r\n            var By = end.y;\r\n\r\n            // Linear interpolation formula:\r\n            // point = start + (end - start) * progress;\r\n            var Cx = Ax + (Bx - Ax) * progress;\r\n            var Cy = Ay + (By - Ay) * progress;\r\n\r\n            return {\r\n                x: Cx,\r\n                y: Cy\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Update children points array.\r\n         */\r\n\r\n    }, {\r\n        key: '_getUpdatedChildren',\r\n        value: function _getUpdatedChildren(progress) {\r\n\r\n            var children = [];\r\n\r\n            for (var i = 0; i < this._depth; i++) {\r\n\r\n                // Get basePolygon points on first lap\r\n                // then get previous child points.\r\n                var points = children[i - 1] || this.points;\r\n\r\n                var inscribedPoints = this._getInscribedPoints(points, progress);\r\n\r\n                children.push(inscribedPoints);\r\n            }\r\n\r\n            return children;\r\n        }\r\n\r\n        /**\r\n         * Render children, first update children array,\r\n         * then loop and draw each child.\r\n         */\r\n\r\n    }, {\r\n        key: 'renderChildren',\r\n        value: function renderChildren(context, progress) {\r\n            var _this2 = this;\r\n\r\n            var children = this._getUpdatedChildren(progress);\r\n\r\n            // child = array of points at a certain progress over the parent sides.\r\n            children.forEach(function (points, i) {\r\n\r\n                // Draw child.\r\n                context.beginPath();\r\n                points.forEach(function (point) {\r\n                    return context.lineTo(point.x, point.y);\r\n                });\r\n                context.closePath();\r\n\r\n                // Set colors.\r\n                var strokeColor = _this2._colors.stroke;\r\n                var childColor = _this2._colors.child;\r\n\r\n                if (strokeColor) {\r\n                    context.strokeStyle = strokeColor;\r\n                    context.stroke();\r\n                }\r\n\r\n                if (childColor) {\r\n                    var rgb = rebound.util.hexToRGB(childColor);\r\n\r\n                    var alphaUnit = 1 / children.length;\r\n                    var alpha = alphaUnit + alphaUnit * i;\r\n\r\n                    var rgba = 'rgba(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ', ' + alpha + ')';\r\n\r\n                    context.fillStyle = rgba;\r\n\r\n                    // Set Shadow.\r\n                    context.shadowColor = 'rgba(0,0,0, 0.1)';\r\n                    context.shadowBlur = 10;\r\n                    context.shadowOffsetX = 0;\r\n                    context.shadowOffsetY = 0;\r\n\r\n                    context.fill();\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Render.\r\n         */\r\n\r\n    }, {\r\n        key: 'render',\r\n        value: function render(context) {\r\n\r\n            context.save();\r\n\r\n            context.translate(this._x, this._y);\r\n\r\n            if (this.rotation !== 0) {\r\n                context.rotate(rebound.MathUtil.degreesToRadians(this.rotation));\r\n            }\r\n\r\n            if (this.scale !== 1) {\r\n                context.scale(this.scale, this.scale);\r\n            }\r\n\r\n            // Draw basePolygon.\r\n            context.beginPath();\r\n            this.points.forEach(function (point) {\r\n                return context.lineTo(point.x, point.y);\r\n            });\r\n            context.closePath();\r\n\r\n            // Set colors.\r\n            var strokeColor = this._colors.stroke;\r\n            var childColor = this._colors.base;\r\n\r\n            if (strokeColor) {\r\n                context.strokeStyle = strokeColor;\r\n                context.stroke();\r\n            }\r\n\r\n            if (childColor) {\r\n                context.fillStyle = childColor;\r\n                context.fill();\r\n            }\r\n\r\n            context.restore();\r\n        }\r\n    }]);\r\n\r\n    return Polygon;\r\n}();\r\n'use strict';\r\n\r\n/**\r\n * Spinner.\r\n * Create a canvas element, append it to the body, render polygon with\r\n * inscribed children, provide init and complete methods to control spinner.\r\n */\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nvar Spinner = function () {\r\n    function Spinner(params) {\r\n        _classCallCheck(this, Spinner);\r\n\r\n        var id = params.id,\r\n            radius = params.radius,\r\n            sides = params.sides,\r\n            depth = params.depth,\r\n            colors = params.colors,\r\n            alwaysForward = params.alwaysForward,\r\n            restAt = params.restAt,\r\n            renderBase = params.renderBase;\r\n\r\n        if (sides < 3) {\r\n            console.warn('At least 3 sides required.');\r\n            sides = 3;\r\n        }\r\n\r\n        this._canvas = document.createElement('canvas');\r\n        this._canvas.style.backgroundColor = colors.background;\r\n        this._canvas.style.zIndex = 1100;\r\n\r\n        this._canvasW = null;\r\n        this._canvasH = null;\r\n        this._canvasOpacity = 1;\r\n\r\n        this._centerX = null;\r\n        this._centerY = null;\r\n\r\n        this._alwaysForward = alwaysForward;\r\n        this._restThreshold = restAt;\r\n        this._renderBase = renderBase;\r\n\r\n        this._springRangeLow = 0;\r\n        this._springRangeHigh = this._restThreshold || 1;\r\n\r\n        // Instantiate basePolygon.\r\n        this._basePolygon = new Polygon(radius, sides, depth, colors);\r\n\r\n        this._progress = 0;\r\n\r\n        this._isAutoSpin = null;\r\n        this._isCompleting = null;\r\n    }\r\n\r\n    /**\r\n     * Init spinner.\r\n     */\r\n\r\n\r\n    _createClass(Spinner, [{\r\n        key: 'init',\r\n        value: function init(spring, autoSpin) {\r\n\r\n            this._addCanvas();\r\n\r\n            this._spring = spring;\r\n            this._addSpringListener();\r\n\r\n            this._isAutoSpin = autoSpin;\r\n\r\n            if (autoSpin) {\r\n                // Start auto spin.\r\n                this._spin();\r\n            } else {\r\n                // Render first frame only.\r\n                this._spring.setEndValue(0);\r\n                this.render();\r\n            }\r\n        }\r\n    }, {\r\n        key: '_addCanvas',\r\n        value: function _addCanvas() {\r\n            document.body.appendChild(this._canvas);\r\n            this._context = this._canvas.getContext('2d');\r\n            this._setCanvasSize();\r\n        }\r\n    }, {\r\n        key: '_setCanvasSize',\r\n        value: function _setCanvasSize() {\r\n            this._canvasW = this._canvas.width = window.innerWidth;\r\n            this._canvasH = this._canvas.height = window.innerHeight;\r\n\r\n            this._canvas.style.position = 'fixed';\r\n            this._canvas.style.top = 0;\r\n            this._canvas.style.left = 0;\r\n\r\n            this._centerX = this._canvasW / 2;\r\n            this._centerY = this._canvasH / 2;\r\n        }\r\n    }, {\r\n        key: '_addSpringListener',\r\n        value: function _addSpringListener() {\r\n\r\n            var ctx = this;\r\n\r\n            // Add a listener to the spring. Every time the physics\r\n            // solver updates the Spring's value onSpringUpdate will\r\n            // be called.\r\n            this._spring.addListener({\r\n                onSpringUpdate: function onSpringUpdate(spring) {\r\n\r\n                    var val = spring.getCurrentValue();\r\n\r\n                    // Input range in the `from` parameters.\r\n                    var fromLow = 0,\r\n                        fromHigh = 1,\r\n\r\n                        // Property animation range in the `to` parameters.\r\n                        toLow = ctx._springRangeLow,\r\n                        toHigh = ctx._springRangeHigh;\r\n\r\n                    val = rebound.MathUtil.mapValueInRange(val, fromLow, fromHigh, toLow, toHigh);\r\n\r\n                    // Note that the render method is\r\n                    // called with the spring motion value.\r\n                    ctx.render(val);\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Start complete animation.\r\n         */\r\n\r\n    }, {\r\n        key: 'setComplete',\r\n        value: function setComplete() {\r\n            this._isCompleting = true;\r\n        }\r\n    }, {\r\n        key: '_completeAnimation',\r\n        value: function _completeAnimation() {\r\n\r\n            // Fade out the canvas.\r\n            this._canvasOpacity -= 0.1;\r\n            this._canvas.style.opacity = this._canvasOpacity;\r\n\r\n            // Stop animation and remove canvas.\r\n            if (this._canvasOpacity <= 0) {\r\n                this._isAutoSpin = false;\r\n                this._spring.setAtRest();\r\n                this._canvas.remove();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Spin animation.\r\n         */\r\n\r\n    }, {\r\n        key: '_spin',\r\n        value: function _spin() {\r\n\r\n            if (this._alwaysForward) {\r\n\r\n                var currentValue = this._spring.getCurrentValue();\r\n\r\n                // Switch the animation range used to compute the value\r\n                // in the `onSpringUpdate`, so to change the reverse animation\r\n                // of the spring at a certain threshold.\r\n                if (this._restThreshold && currentValue === 1) {\r\n                    this._switchSpringRange();\r\n                }\r\n\r\n                // In order to keep the motion going forward\r\n                // when spring reach 1 reset to 0 at rest.\r\n                if (currentValue === 1) {\r\n                    this._spring.setCurrentValue(0).setAtRest();\r\n                }\r\n            }\r\n\r\n            // Restart the spinner.\r\n            this._spring.setEndValue(this._spring.getCurrentValue() === 1 ? 0 : 1);\r\n        }\r\n    }, {\r\n        key: '_switchSpringRange',\r\n        value: function _switchSpringRange() {\r\n\r\n            var threshold = this._restThreshold;\r\n\r\n            this._springRangeLow = this._springRangeLow === threshold ? 0 : threshold;\r\n            this._springRangeHigh = this._springRangeHigh === threshold ? 1 : threshold;\r\n        }\r\n\r\n        /**\r\n         * Render.\r\n         */\r\n\r\n    }, {\r\n        key: 'render',\r\n        value: function render(progress) {\r\n\r\n            // Update progess if present and round to 4th decimal.\r\n            if (progress) {\r\n                this._progress = Math.round(progress * 10000) / 10000;\r\n            }\r\n\r\n            // Restart the spin.\r\n            if (this._isAutoSpin && this._spring.isAtRest()) {\r\n                this._spin();\r\n            }\r\n\r\n            // Complete the animation.\r\n            if (this._isCompleting) {\r\n                this._completeAnimation();\r\n            }\r\n\r\n            // Clear canvas and save context.\r\n            this._context.clearRect(0, 0, this._canvasW, this._canvasH);\r\n            this._context.save();\r\n\r\n            // Move to center.\r\n            this._context.translate(this._centerX, this._centerY);\r\n\r\n            this._context.lineWidth = 1.5;\r\n\r\n            // Render basePolygon.\r\n            if (this._renderBase) {\r\n                this._basePolygon.render(this._context);\r\n            }\r\n\r\n            // Render inscribed polygons.\r\n            this._basePolygon.renderChildren(this._context, this._progress);\r\n\r\n            this._context.restore();\r\n        }\r\n    }]);\r\n\r\n    return Spinner;\r\n}();\r\n'use strict';\n/*** EXPORTS FROM exports-loader ***/\n\n\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/vendor/loading/loading.js?./node_modules/exports-loader/dist/cjs.js?exports=rebound,Spinner")},"./src/template/banner.html":
/*!**********************************!*\
  !*** ./src/template/banner.html ***!
  \**********************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n// Module\nvar code = "<div class=\\"main-header\\"> <div id=\\"nhBannerAnimation\\"> <ul class=\\"circles\\"> <li></li> <li></li> <li></li> <li></li> <li></li> <li></li> <li></li> <li></li> <li></li> <li></li> </ul> </div> <div class=\\"vertical\\"> <div class=\\"main-header-content inner\\"> <h1 class=\\"page-title\\" id=\\"homeTopTitle\\"><span></span></h1> <h2 class=\\"page-description\\" id=\\"hitokoto\\"></h2> <h3 class=\\"page-author\\" id=\\"hitokotoAuthor\\"></h3> <h1 class=\\"sb-title\\" id=\\"sbTitle\\"> <span id=\\"sbTitleText\\"></span> <span id=\\"sbTitleConsole\\"></span> </h1> <p class=\\"article-info\\" id=\\"articleInfo\\"></p> </div> </div> <a class=\\"scroll-down\\" href=\\"javascript:void(0);\\" data-offset=\\"-45\\"> <span class=\\"hidden\\">Scroll Down</span> <i class=\\"scroll-down-icon iconfont icon-fanhui\\"></i> </a> </div>";\n// Exports\n/* harmony default export */ __webpack_exports__["default"] = (code);\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/template/banner.html?')},"./src/template/sidebar.html":
/*!***********************************!*\
  !*** ./src/template/sidebar.html ***!
  \***********************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n// Module\nvar code = "<div class=\\"container\\"> <div class=\\"menu-wrap optiscroll\\" id=\\"menuWrap\\" style=\\"display:none\\"> <nav class=\\"menu\\"> <div class=\\"introduce-box\\"> <div class=\\"introduce-head\\"> <div class=\\"introduce-via\\" id=\\"menuBlogAvatar\\"></div> </div> <div id=\\"introduce\\"></div> </div> <div class=\\"nav-title\\"></div> <div class=\\"icon-list\\"> <ul id=\\"m-nav-list\\"> </ul> </div> <span id=\\"calendar-box\\"></span> <div class=\\"m-list-title\\"><span>找找看</span></div> <div class=\\"m-icon-list\\" id=\\"sb-sidebarSearchBox\\"></div> <div class=\\"m-list-title\\"><span>积分排名<span class=\\"iconfont icon-select m-list-title-select\\"></span></span> </div> <div class=\\"m-icon-list\\" id=\\"sb-sidebarScorerank\\"></div> <span id=\\"menuCustomList\\"></span> <div class=\\"m-list-title\\"><span>最新随笔<span class=\\"iconfont icon-select m-list-title-select\\"></span></span> </div> <div class=\\"m-icon-list\\" id=\\"sb-sidebarRecentposts\\"></div> <div class=\\"m-list-title\\"><span>我的标签<span class=\\"iconfont icon-select m-list-title-select\\"></span></span> </div> <div class=\\"m-icon-list\\" id=\\"sb-toptags\\"></div> <div class=\\"m-list-title\\"><span>随笔分类<span class=\\"iconfont icon-select m-list-title-select\\"></span></span> </div> <div class=\\"m-icon-list\\" id=\\"sb-classify\\"></div> <div class=\\"m-list-title\\"><span>文章分类<span class=\\"iconfont icon-select m-list-title-select\\"></span></span> </div> <div class=\\"m-icon-list\\" id=\\"sb-ArticleCategory\\"></div> <div class=\\"m-list-title\\"><span>阅读排行<span class=\\"iconfont icon-select m-list-title-select\\"></span></span> </div> <div class=\\"m-icon-list\\" id=\\"sb-topview\\"></div> <div class=\\"m-list-title\\"><span>推荐排行<span class=\\"iconfont icon-select m-list-title-select\\"></span></span> </div> <div class=\\"m-icon-list\\" id=\\"sb-topDiggPosts\\"></div> <div class=\\"m-list-title\\"><span>最新评论<span class=\\"iconfont icon-select m-list-title-select\\"></span></span> </div> <div class=\\"m-icon-list\\" id=\\"sb-recentComments\\"></div> <div class=\\"m-list-title\\"><span>文章档案<span class=\\"iconfont icon-select m-list-title-select\\"></span></span> </div> <div class=\\"m-icon-list\\" id=\\"sb-articlearchive\\"></div> <div class=\\"m-list-title\\"><span>随笔档案<span class=\\"iconfont icon-select m-list-title-select\\"></span></span> </div> <div class=\\"m-icon-list\\" id=\\"sb-record\\"></div> </nav> <button class=\\"close-button\\" id=\\"close-button\\">Close Menu</button> <div class=\\"morph-shape\\" id=\\"morph-shape\\" data-morph-open=\\"M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z\\"> <svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"100%\\" height=\\"100%\\" viewBox=\\"0 0 100 800\\" preserveAspectRatio=\\"none\\"> <path d=\\"M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z\\"/> </svg> </div> </div> <button class=\\"menu-button\\" id=\\"open-button\\">MENU</button> <div class=\\"content-wrap\\" id=\\"content-wrap\\"></div> </div>";\n// Exports\n/* harmony default export */ __webpack_exports__["default"] = (code);\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/template/sidebar.html?')},"./src/template/sidebarNav.html":
/*!**************************************!*\
  !*** ./src/template/sidebarNav.html ***!
  \**************************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n// Module\nvar code = "<li> <a href=\\"https://www.cnblogs.com/##user##\\" target=\\"_self\\"> <i class=\\"iconfont icon-homepage_fill\\"></i>首页 </a> </li> <li> <a href=\\"https://msg.cnblogs.com/send/##user##\\" target=\\"_blank\\"> <i class=\\"iconfont icon-zhifeiji\\"></i>联系 </a> </li> <li> <a href=\\"javascript:void(0)\\" onclick=\'$(\\"#blog_nav_rss\\").trigger(\\"click\\")\' data-rss=\\"https://www.cnblogs.com/##user##/rss/\\"> <i class=\\"iconfont icon-qinmifu\\"></i>订阅 </a> </li> <li> <a href=\\"https://i.cnblogs.com/\\" target=\\"_blank\\"> <i class=\\"iconfont icon-setup_fill\\"></i>管理 </a> </li>";\n// Exports\n/* harmony default export */ __webpack_exports__["default"] = (code);\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/template/sidebarNav.html?')},"./src/style/asset.css":
/*!*****************************!*\
  !*** ./src/style/asset.css ***!
  \*****************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/style/asset.css?")},"./src/style/menu_bubble.css":
/*!***********************************!*\
  !*** ./src/style/menu_bubble.css ***!
  \***********************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/style/menu_bubble.css?")},"./src/components/banner/banner.js":
/*!*****************************************!*\
  !*** ./src/components/banner/banner.js ***!
  \*****************************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ main; }\n/* harmony export */ });\n/* harmony import */ var _template_banner_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../template/banner.html */ \"./src/template/banner.html\");\n/* harmony import */ var _images_webp_home_top_bg_webp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../images/webp/home_top_bg.webp */ \"./src/images/webp/home_top_bg.webp\");\n/* harmony import */ var _images_webp_nothome_top_bg_webp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../images/webp/nothome_top_bg.webp */ \"./src/images/webp/nothome_top_bg.webp\");\n/**\r\n * UPDATES AND DOCS AT: https://github.com/BNDong\r\n * https://www.cnblogs.com/bndong/\r\n * @author: BNDong, dbnuo@foxmail.com\r\n * ----------------------------------------------\r\n * @describe: banner 处理\r\n */\r\n\r\n\r\n\r\n\r\nfunction main(_) {\r\n\r\n    $('#blog-news').prepend(_template_banner_html__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\r\n\r\n    /**\r\n     * 设置banner背景图片，初始化高度\r\n     * （该处理需在loading结束之前处理）\r\n     */\r\n    (() => {\r\n        let mainHeader = $('.main-header');\r\n        let topImg, bgImg, height;\r\n        if (_.__status.pageType === 'home') {\r\n            topImg = _.__config.banner.home.background.length > 0\r\n                ? _.__config.banner.home.background : [_images_webp_home_top_bg_webp__WEBPACK_IMPORTED_MODULE_1__];\r\n        }  else {\r\n            topImg = _.__config.banner.article.background.length > 0\r\n                ? _.__config.banner.article.background : [_images_webp_nothome_top_bg_webp__WEBPACK_IMPORTED_MODULE_2__];\r\n            height = '40vh';\r\n            $('#homeTopTitle').hide();\r\n            $('.scroll-down').hide();\r\n            $('#home').css('margin-top', '40vh');\r\n            $('#cb_post_title_url').addClass('post-del-title');\r\n        }\r\n\r\n        topImg.length > 0 ?\r\n            (topImg.length > 1 ? bgImg = topImg[_.__tools.randomNum(0, topImg.length - 1)] : bgImg = topImg[0])\r\n            : bgImg = \"\";\r\n\r\n        mainHeader.css({\r\n            'background': '#222 url(\\'' + encodeURI(bgImg) + '\\')  center center no-repeat',\r\n            'background-size': 'cover'\r\n        });\r\n        if (height) mainHeader.css('height', height);\r\n    })();\r\n\r\n    // 添加事件监听\r\n    _.__event.scroll.handle.push(() => {\r\n        let openButton = $('#open-button');\r\n\r\n        if (_.__event.scroll.temScroll < _.__event.scroll.docScroll) { // 向下滚动\r\n\r\n            if (_.__event.scroll.homeScroll <= _.__event.scroll.docScroll) { // 滚过头图\r\n\r\n                // 设置菜单按钮\r\n                if (!openButton.hasClass('menu-button-scroll')) {\r\n                    openButton.addClass('menu-button-scroll');\r\n                    openButton.text('');\r\n                }\r\n            }\r\n\r\n        } else { // 向上滚动\r\n\r\n            if (_.__event.scroll.homeScroll >= _.__event.scroll.docScroll) { // 滚入头图\r\n\r\n                // 设置菜单按钮\r\n                if (openButton.hasClass('menu-button-scroll')) {\r\n                    openButton.removeClass('menu-button-scroll');\r\n                    openButton.text('MENU');\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/components/banner/banner.js?")},"./src/components/common/comBefore.js":
/*!********************************************!*\
  !*** ./src/components/common/comBefore.js ***!
  \********************************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": function() { return /* binding */ main; }\n/* harmony export */ });\n/* harmony import */ var _loading_loading__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loading/loading */ "./src/components/loading/loading.js");\n/* harmony import */ var _sidebar_sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sidebar/sidebar */ "./src/components/sidebar/sidebar.js");\n/* harmony import */ var _banner_banner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../banner/banner */ "./src/components/banner/banner.js");\n/* harmony import */ var _event_event__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../event/event */ "./src/components/event/event.js");\n/* harmony import */ var _images_webp_rss_webp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../images/webp/rss.webp */ "./src/images/webp/rss.webp");\n/* harmony import */ var _style_asset_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../style/asset.css */ "./src/style/asset.css");\n/* harmony import */ var _vendor_rotate_jquery_rotate_min__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../vendor/rotate/jquery.rotate.min */ "./src/vendor/rotate/jquery.rotate.min.js");\n/* harmony import */ var _vendor_rotate_jquery_rotate_min__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_vendor_rotate_jquery_rotate_min__WEBPACK_IMPORTED_MODULE_6__);\n/**\r\n * UPDATES AND DOCS AT: https://github.com/BNDong\r\n * https://www.cnblogs.com/bndong/\r\n * @author: BNDong, dbnuo@foxmail.com\r\n * ----------------------------------------------\r\n * @describe: 前置公共处理\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction main(_) {\r\n\r\n    // 默认字体图标库\r\n    __webpack_require__.e(/*! import() | fonticon */ "fonticon").then(__webpack_require__.bind(__webpack_require__, /*! ../../style/fonticon.css */ "./src/style/fonticon.css"));\r\n\r\n    // 谷歌字体\r\n    __webpack_require__.e(/*! import() | google-fonts */ "google-fonts").then(__webpack_require__.bind(__webpack_require__, /*! ../../style/google-fonts.css */ "./src/style/google-fonts.css"));\r\n\r\n    let loadingObj = (0,_loading_loading__WEBPACK_IMPORTED_MODULE_0__["default"])(_);\r\n\r\n    /**\r\n     * 开启 loading\r\n     */\r\n    (() => {\r\n        loadingObj.start();\r\n    })();\r\n\r\n    /**\r\n     * 定时清除全部计时器\r\n     */\r\n    (() => {\r\n        setTimeout(() => {\r\n            $.each(_.__timeIds, (e) => {\r\n                null != _.__timeIds[e] && window.clearInterval(_.__timeIds[e]);\r\n            });\r\n        }, 30000);\r\n    })();\r\n\r\n    /**\r\n     * 事件绑定\r\n     */\r\n    (() => {\r\n        (0,_event_event__WEBPACK_IMPORTED_MODULE_3__["default"])(_).init();\r\n    })();\r\n\r\n    /**\r\n     * 侧边栏\r\n     */\r\n    (() => {\r\n        (0,_sidebar_sidebar__WEBPACK_IMPORTED_MODULE_1__["default"])(_);\r\n    })();\r\n\r\n    /**\r\n     * 头图\r\n     */\r\n    (() => {\r\n        (0,_banner_banner__WEBPACK_IMPORTED_MODULE_2__["default"])(_);\r\n    })();\r\n\r\n    /**\r\n     * 添加扩展字体图标库\r\n     */\r\n    (() => {\r\n        if (_.__config.fontIconExtend !== \'\') _.__tools.dynamicLoadingCss(_.__config.fontIconExtend);\r\n    })();\r\n\r\n    /**\r\n     * 关闭 loading\r\n     */\r\n    (() => {\r\n        loadingObj.stop();\r\n    })();\r\n}\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/components/common/comBefore.js?')},"./src/components/loading/loading.js":
/*!*******************************************!*\
  !*** ./src/components/loading/loading.js ***!
  \*******************************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": function() { return /* binding */ main; }\n/* harmony export */ });\n/* harmony import */ var exports_loader_exports_rebound_Spinner_vendor_loading_loading__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! exports-loader?exports=rebound,Spinner!../../vendor/loading/loading */ "./node_modules/exports-loader/dist/cjs.js?exports=rebound,Spinner!./src/vendor/loading/loading.js");\n/* harmony import */ var _hooks_beforeLoading__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../hooks/beforeLoading */ "./src/hooks/beforeLoading.js");\n/* harmony import */ var _hooks_afterLoading__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../hooks/afterLoading */ "./src/hooks/afterLoading.js");\n/**\r\n * UPDATES AND DOCS AT: https://github.com/BNDong\r\n * https://www.cnblogs.com/bndong/\r\n * @author: BNDong, dbnuo@foxmail.com\r\n * ----------------------------------------------\r\n * @describe: loading 处理\r\n */\r\n\r\n\r\n\r\n\r\nfunction main(_) {\r\n\r\n    let loading = function() {\r\n        let that = this;\r\n\r\n        this.config  = _.__config.loading;\r\n        this.spring  = null;\r\n        this.spinner = null;\r\n\r\n        /**\r\n         * Initialize Rebound.js with settings.\r\n         * Rebound is used to generate a spring which\r\n         * is then used to animate the spinner.\r\n         * See more: http://facebook.github.io/rebound-js/docs/rebound.html\r\n         */\r\n        this.initRebound = () => {\r\n\r\n            let settings = that.config.rebound;\r\n\r\n            // Create a SpringSystem.\r\n            let springSystem = new exports_loader_exports_rebound_Spinner_vendor_loading_loading__WEBPACK_IMPORTED_MODULE_0__.rebound.SpringSystem();\r\n\r\n            // Add a spring to the system.\r\n            that.spring = springSystem.createSpring(settings.tension, settings.friction);\r\n        }\r\n\r\n        /**\r\n         * Initialize Spinner with settings.\r\n         */\r\n        this.initSpinner = () => {\r\n\r\n            let settings = that.config.spinner;\r\n\r\n            // Instantiate Spinner.\r\n            that.spinner = new exports_loader_exports_rebound_Spinner_vendor_loading_loading__WEBPACK_IMPORTED_MODULE_0__.Spinner(settings);\r\n        }\r\n\r\n        /**\r\n         * 开启 loading\r\n         */\r\n        this.start = () => {\r\n            ;(0,_hooks_beforeLoading__WEBPACK_IMPORTED_MODULE_1__["default"])(_);\r\n            $(\'#blog-news\').prepend(\'<div id="loading"></div>\');\r\n            that.initRebound();\r\n            that.initSpinner();\r\n            that.spinner.init(that.spring, true);\r\n        }\r\n\r\n        /**\r\n         * 结束 loading\r\n         */\r\n        this.stop = () => {\r\n            $(\'body\').css(\'overflow\', \'auto\');\r\n            that.spinner.setComplete();\r\n            $(\'div#loading\').hide();\r\n            $(\'a[name="top"]\').hide();\r\n            (0,_hooks_afterLoading__WEBPACK_IMPORTED_MODULE_2__["default"])(_);\r\n        }\r\n    }\r\n\r\n    return (new loading());\r\n}\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/components/loading/loading.js?')},"./src/components/sidebar/lib/classie.js":
/*!***********************************************!*\
  !*** ./src/components/sidebar/lib/classie.js ***!
  \***********************************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ main; }\n/* harmony export */ });\n/**\r\n * UPDATES AND DOCS AT: https://github.com/BNDong\r\n * https://www.cnblogs.com/bndong/\r\n * @author: BNDong, dbnuo@foxmail.com\r\n * ----------------------------------------------\r\n * @describe: 侧边栏处理\r\n */\r\nfunction main() {\r\n  function classReg( className ) {\r\n    return new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\");\r\n  }\r\n\r\n  // classList support for class management\r\n  // altho to be fair, the api sucks because it won't accept multiple classes at once\r\n  let hasClass, addClass, removeClass;\r\n\r\n  if ( 'classList' in document.documentElement ) {\r\n    hasClass = function( elem, c ) {\r\n      return elem.classList.contains( c );\r\n    };\r\n    addClass = function( elem, c ) {\r\n      elem.classList.add( c );\r\n    };\r\n    removeClass = function( elem, c ) {\r\n      elem.classList.remove( c );\r\n    };\r\n  }\r\n  else {\r\n    hasClass = function( elem, c ) {\r\n      return classReg( c ).test( elem.className );\r\n    };\r\n    addClass = function( elem, c ) {\r\n      if ( !hasClass( elem, c ) ) {\r\n        elem.className = elem.className + ' ' + c;\r\n      }\r\n    };\r\n    removeClass = function( elem, c ) {\r\n      elem.className = elem.className.replace( classReg( c ), ' ' );\r\n    };\r\n  }\r\n\r\n  function toggleClass( elem, c ) {\r\n    var fn = hasClass( elem, c ) ? removeClass : addClass;\r\n    fn( elem, c );\r\n  }\r\n\r\n  return {\r\n    // full names\r\n    hasClass: hasClass,\r\n    addClass: addClass,\r\n    removeClass: removeClass,\r\n    toggleClass: toggleClass,\r\n    // short names\r\n    has: hasClass,\r\n    add: addClass,\r\n    remove: removeClass,\r\n    toggle: toggleClass\r\n  };\r\n}\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/components/sidebar/lib/classie.js?")},"./src/components/sidebar/lib/main4.js":
/*!*********************************************!*\
  !*** ./src/components/sidebar/lib/main4.js ***!
  \*********************************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ main; }\n/* harmony export */ });\n/* harmony import */ var _classie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classie */ \"./src/components/sidebar/lib/classie.js\");\n/* harmony import */ var snapsvg_cjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! snapsvg-cjs */ \"./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js\");\n/* harmony import */ var snapsvg_cjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(snapsvg_cjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var optiscroll__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! optiscroll */ \"./node_modules/optiscroll/dist/optiscroll.js\");\n/* harmony import */ var optiscroll__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(optiscroll__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var optiscroll_dist_optiscroll_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! optiscroll/dist/optiscroll.css */ \"./node_modules/optiscroll/dist/optiscroll.css\");\n/**\r\n * UPDATES AND DOCS AT: https://github.com/BNDong\r\n * https://www.cnblogs.com/bndong/\r\n * @author: BNDong, dbnuo@foxmail.com\r\n * ----------------------------------------------\r\n * @describe: 侧边栏处理\r\n */\r\n\r\n\r\n\r\n\r\n\r\nfunction main() {\r\n\r\n\tlet bodyEl = document.body,\r\n\t\tcontent = document.querySelector( '.content-wrap' ),\r\n\t\topenbtn = document.getElementById( 'open-button' ),\r\n\t\tclosebtn = document.getElementById( 'close-button' ),\r\n\t\tisOpen = false,\r\n\t\tclassie = (0,_classie__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(),\r\n\r\n\t\tmorphEl = document.getElementById( 'morph-shape' ),\r\n\t\ts = snapsvg_cjs__WEBPACK_IMPORTED_MODULE_1___default()( morphEl.querySelector( 'svg' ) ),\r\n\t\tpath = s.select( 'path' ),\r\n\t\tinitialPath = path.attr('d'),\r\n\t\tsteps = morphEl.getAttribute( 'data-morph-open' ).split(';'),\r\n\t\tstepsTotal = steps.length,\r\n\t\tisAnimating = false;\r\n\r\n\t// 初始化滚动条\r\n\tlet myOptiscrollInstance = new (optiscroll__WEBPACK_IMPORTED_MODULE_2___default())(document.querySelector('#menuWrap'), {\r\n\t\tpreventParentScroll: true,\r\n\t\tforceScrollbars: true\r\n\t});\r\n\r\n\tfunction init() {\r\n\t\t// 防止移动端滚动\r\n\t\t// $(\"#mainContent\").on(\"touchmove\",function(event){\r\n\t\t// \tevent.preventDefault;\r\n\t\t// }, false)\r\n\t\t// $(\"#content-wrap\").on(\"touchmove\",function(event){\r\n\t\t// \tevent.preventDefault;\r\n\t\t// }, false)\r\n\r\n\t\tinitEvents();\r\n\t}\r\n\r\n\tfunction initEvents() {\r\n\t\topenbtn.addEventListener( 'click', toggleMenu );\r\n\t\tif( closebtn ) {\r\n\t\t\tclosebtn.addEventListener( 'click', toggleMenu );\r\n\t\t}\r\n\r\n\t\t// close the menu element if the target it麓s not the menu element or one of its descendants..\r\n\t\tcontent.addEventListener( 'click', function(ev) {\r\n\t\t\tlet target = ev.target;\r\n\t\t\tif( isOpen && target !== openbtn ) {\r\n\t\t\t\ttoggleMenu();\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\tfunction toggleMenu() {\r\n\t\tif( isAnimating ) return false;\r\n\t\tisAnimating = true;\r\n\t\t$('.menu-wrap').show();\r\n\r\n\t\tlet homeMarginLeft = $('#home').css('margin-left');\r\n\t\thomeMarginLeft = parseFloat(homeMarginLeft.replace(/px/g,''));\r\n\r\n\t\tif( isOpen ) {\r\n\r\n\t\t\t$(bodyEl).removeClass('show-menu');\r\n\r\n\t\t\t//setTimeout( \"$('body').removeClass('show-menu');\", 25);\r\n\r\n\t\t\t$('#content-wrap').fadeOut(300);\r\n\t\t\t$(bodyEl).css('overflow', 'auto');\r\n\t\t\t$(\"#mainContent\").off(\"touchmove\");\r\n\r\n\t\t\t// animate path\r\n\t\t\tsetTimeout( function() {\r\n\t\t\t\t// reset path\r\n\t\t\t\tpath.attr( 'd', initialPath );\r\n\t\t\t\tisAnimating = false;\r\n\t\t\t}, 300 );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tclassie.add( bodyEl, 'show-menu' );\r\n\r\n\t\t\t// animate path\r\n\t\t\tlet pos = 0,\r\n\t\t\t\tnextStep = function( pos ) {\r\n\t\t\t\t\tif( pos > stepsTotal - 1 ) {\r\n\t\t\t\t\t\tisAnimating = false;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpath.animate( { 'path' : steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function() { nextStep(pos); } );\r\n\t\t\t\t\tpos++;\r\n\t\t\t\t};\r\n\r\n\t\t\t$('#content-wrap').fadeIn(300);\r\n\t\t\t$('body').css('overflow', 'hidden');\r\n\r\n\t\t\t// 初始化滚动条到顶部位置\r\n\t\t\tmyOptiscrollInstance.scrollTo(false, 'top');\r\n\r\n\t\t\tnextStep(pos);\r\n\t\t}\r\n\t\tisOpen = !isOpen;\r\n\t}\r\n\r\n\tinit();\r\n}\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/components/sidebar/lib/main4.js?")},"./src/components/sidebar/sidebar.js":
/*!*******************************************!*\
  !*** ./src/components/sidebar/sidebar.js ***!
  \*******************************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ main; }\n/* harmony export */ });\n/* harmony import */ var _template_sidebar_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../template/sidebar.html */ \"./src/template/sidebar.html\");\n/* harmony import */ var _template_sidebarNav_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../template/sidebarNav.html */ \"./src/template/sidebarNav.html\");\n/* harmony import */ var _style_menu_bubble_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../style/menu_bubble.css */ \"./src/style/menu_bubble.css\");\n/* harmony import */ var _lib_main4__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/main4 */ \"./src/components/sidebar/lib/main4.js\");\n/* harmony import */ var _images_webp_default_avatar_webp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../images/webp/default_avatar.webp */ \"./src/images/webp/default_avatar.webp\");\n/* harmony import */ var _images_webp_me_top_bg_webp__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../images/webp/me_top_bg.webp */ \"./src/images/webp/me_top_bg.webp\");\n/**\r\n * UPDATES AND DOCS AT: https://github.com/BNDong\r\n * https://www.cnblogs.com/bndong/\r\n * @author: BNDong, dbnuo@foxmail.com\r\n * ----------------------------------------------\r\n * @describe: 侧边栏处理\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction main(_) {\r\n\r\n    /**\r\n     * 设置侧边栏渲染\r\n     */\r\n    (() => {\r\n        $('#sidebar_news').prepend(_template_sidebar_html__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\r\n        (0,_lib_main4__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\r\n    })();\r\n\r\n    /**\r\n     * 设置菜单信息\r\n     */\r\n    (() => {\r\n        // ------- 设置导航 -------\r\n        let navHtml = _.__tools.tempReplacement(_template_sidebarNav_html__WEBPACK_IMPORTED_MODULE_1__[\"default\"], 'user', _.__status.user);\r\n        let navList = _.__config.sidebar.navList;\r\n        if (navList.length > 0) {\r\n            $.each(navList, function (i) {\r\n                let iconClass = navList[i].length > 2 ? navList[i][2] : \"icon-qianzishenhe\";\r\n                navHtml += '<li><a href=\"'+(navList[i][1])+'\" target=\"_blank\"><i class=\"iconfont '+iconClass+'\"></i>'+(navList[i][0])+'</a></li>';\r\n            });\r\n        }\r\n        $('#m-nav-list').append(navHtml);\r\n\r\n        // ------- 设置头像 -------\r\n        let blogAvatar = _.__config.info.avatar ? _.__config.info.avatar : _images_webp_default_avatar_webp__WEBPACK_IMPORTED_MODULE_4__;\r\n        $('#menuBlogAvatar').append(\"<img src='\"+blogAvatar+\"'>\");\r\n    })();\r\n\r\n    /**\r\n     * 设置菜单个人信息背景图片\r\n     */\r\n    (() => {\r\n        let mbg = _.__config.sidebar.infoBackground ? _.__config.sidebar.infoBackground : _images_webp_me_top_bg_webp__WEBPACK_IMPORTED_MODULE_5__;\r\n        $('.introduce-box').css({\r\n            'background': '#000 url(\\'' + mbg + '\\') center no-repeat',\r\n            'background-size': '100%'\r\n        });\r\n    })();\r\n\r\n    /**\r\n     * 定时拉取数据\r\n     */\r\n    (() => {\r\n        let timeout = 1000;\r\n\r\n        // ------- 用户个人信息 -------\r\n        _.__timeIds.introduceTId = window.setInterval(() => {\r\n            let introduceHtml = $('#profile_block').html(),\r\n                menuIntroduce = $('#introduce');\r\n            if ((typeof introduceHtml == 'string') && menuIntroduce.html() === '') {\r\n                menuIntroduce.html(_.__tools.htmlFiltrationScript(introduceHtml));\r\n                _.__tools.clearIntervalTimeId(_.__timeIds.introduceTId);\r\n            }\r\n        }, timeout);\r\n\r\n        // ------- 日历 -------\r\n        _.__timeIds.calendarTId = window.setInterval(() => {\r\n            let calendarTable = $('#blogCalendar'),\r\n                calendar      = $('#blog-calendar'),\r\n                menuCalendar  = $('#calendar-box');\r\n\r\n            if (calendarTable.length > 0 && menuCalendar.html() === ''){\r\n                let calendarHtml = '<div id=\"blog-calendar\">' + calendar.html() + '</div>';\r\n                calendar.remove();\r\n                menuCalendar.html(calendarHtml);\r\n                $('#blog-calendar').css('visibility', 'visible');\r\n                _.__tools.clearIntervalTimeId(_.__timeIds.calendarTId);\r\n            }\r\n        }, timeout);\r\n\r\n        // ------- 找找看 -------\r\n        _.__timeIds.searchTId = window.setInterval(() => {\r\n            let sidebarSearch = $('#sidebar_search_box'),\r\n                menuSearchBox = $('#sb-sidebarSearchBox');\r\n\r\n            if (sidebarSearch.length > 0 && menuSearchBox.html() === ''){\r\n                menuSearchBox.html('<div id=\"sb_widget_my_zzk\" class=\"div_my_zzk\"><input id=\"q\" type=\"text\" onkeydown=\"return zzk_go_enter(event);\" class=\"input_my_zzk\"></div>').prev('.m-list-title').show();\r\n                _.__tools.clearIntervalTimeId(_.__timeIds.searchTId);\r\n            }\r\n        }, timeout);\r\n\r\n        // ------- 积分与排名 -------\r\n        _.__timeIds.scorerankTId = window.setInterval(() => {\r\n            listHdl(\r\n                $('#sidebar_scorerank ul li'),\r\n                $('#sb-sidebarScorerank'),\r\n                'icon-collection_fill',\r\n                _.__timeIds.scorerankTId\r\n            );\r\n        }, timeout);\r\n\r\n        // ------- 最新随笔 -------\r\n        _.__timeIds.newEssayTId = window.setInterval(() => {\r\n            listHdl(\r\n                $('#sidebar_recentposts ul li'),\r\n                $('#sb-sidebarRecentposts'),\r\n                'icon-time_fill',\r\n                _.__timeIds.newEssayTId\r\n            );\r\n        }, timeout);\r\n\r\n        // ------- 我的标签 -------\r\n        _.__timeIds.topTagsTId = window.setInterval(() => {\r\n            listHdl(\r\n                $('#sidebar_toptags ul li'),\r\n                $('#sb-toptags'),\r\n                'icon-label_fill',\r\n                _.__timeIds.topTagsTId\r\n            );\r\n        }, timeout);\r\n\r\n        // ------- 随笔分类 -------\r\n        _.__timeIds.classifyTId = window.setInterval(() => {\r\n            listHdl(\r\n                $('#sidebar_postcategory ul li'),\r\n                $('#sb-classify'),\r\n                'icon-marketing_fill',\r\n                _.__timeIds.classifyTId\r\n            );\r\n        }, timeout);\r\n\r\n        // ------- 文章分类 -------\r\n        _.__timeIds.articleCategoryTId = window.setInterval(() => {\r\n            listHdl(\r\n                $('#sidebar_articlecategory ul li'),\r\n                $('#sb-ArticleCategory'),\r\n                'icon-marketing_fill',\r\n                _.__timeIds.articleCategoryTId\r\n            );\r\n        }, timeout);\r\n\r\n        // ------- 随笔档案 -------\r\n        _.__timeIds.recordTId = window.setInterval(() => {\r\n            listHdl(\r\n                $('#sidebar_postarchive ul li'),\r\n                $('#sb-record'),\r\n                'icon-task_fill',\r\n                _.__timeIds.recordTId\r\n            );\r\n        }, timeout);\r\n\r\n        // ------- 文章档案 -------\r\n        _.__timeIds.articleTId = window.setInterval(() => {\r\n            listHdl(\r\n                $('#sidebar_articlearchive ul li'),\r\n                $('#sb-articlearchive'),\r\n                'icon-document_fill',\r\n                _.__timeIds.articleTId\r\n            );\r\n        }, timeout);\r\n\r\n        // ------- 阅读排行 -------\r\n        _.__timeIds.topViewTId = window.setInterval(() => {\r\n            listHdl(\r\n                $('#TopViewPostsBlock ul li'),\r\n                $('#sb-topview'),\r\n                'icon-browse_fill',\r\n                _.__timeIds.topViewTId\r\n            );\r\n        }, timeout);\r\n\r\n        // ------- 推荐排行 -------\r\n        _.__timeIds.topDiggPostsTId = window.setInterval(() => {\r\n            listHdl(\r\n                $('#TopDiggPostsBlock ul li'),\r\n                $('#sb-topDiggPosts'),\r\n                'icon-like_fill',\r\n                _.__timeIds.topDiggPostsTId\r\n            );\r\n        }, timeout);\r\n\r\n        // ------- 最新评论 -------\r\n        _.__timeIds.commentsTId = window.setInterval(() => {\r\n            let recentComments     = $('#sidebar_recentcomments ul'),\r\n                menuRecentComments = $('#sb-recentComments');\r\n\r\n            let getMenuCommentsData = (obj, icon) => {\r\n                let html = '<div><ul>',\r\n                    ret  = /^[1-9]+[0-9]*$/,\r\n                    title, body, author;\r\n\r\n                if (obj.find('li').length > 2) {\r\n                    title  = obj.find('li.recent_comment_title');\r\n                    body   = obj.find('li.recent_comment_body');\r\n                    author = obj.find('li.recent_comment_author');\r\n\r\n                    if (title.length !== body.length || title.length !== author.length) return ;\r\n\r\n                    title.each((i) => {\r\n                        let p = $(title[i]),\r\n                            o = p.text() === p.html() ? {} : $(p.html()),\r\n                            textArr = $.trim(p.text()).split('.');\r\n                        if (ret.test(textArr[0])) textArr.splice(0,1);\r\n                        let text = $.trim(textArr.join('.')),\r\n                            iconHtml = '<span class=\"iconfont '+icon+'\" style=\"color: #888;font-size: 15px;margin-right: 5px;\"></span>';\r\n                        o.length > 0 && o.html(iconHtml + text);\r\n                        html += '<li>' + (o.length > 0 ?  o.prop(\"outerHTML\") : \"<a href='javascript:void(0);'>\" + iconHtml + text + \"</a>\")\r\n\r\n                            + '<div style=\"padding-left: 1.5em;color: #777;position: relative;top: -5px;\">'\r\n                            + $(body[i]).text()\r\n                            + '</div>'\r\n\r\n                            + '<div style=\"text-align: right;color: #444;position: relative;top: -10px;\">'\r\n                            + $(author[i]).text()\r\n                            + '</div></li>';\r\n                    });\r\n                }\r\n                html += '</ul></div>';\r\n                return html;\r\n            }\r\n\r\n            if (recentComments.length > 0 && menuRecentComments.html() === '') {\r\n                menuRecentComments.html(getMenuCommentsData(recentComments, 'icon-pinglunzu')).prev('.m-list-title').show();\r\n                _.__tools.clearIntervalTimeId(_.__timeIds.commentsTId);\r\n            }\r\n        }, timeout);\r\n\r\n        // ------- 自定义列表 -------\r\n        (() => {\r\n            let customData = _.__config.sidebar.customList;\r\n            if (Object.keys(customData).length > 0) {\r\n                $.each(customData, (title, list) => {\r\n                    let html = '<div class=\"m-list-title\" style=\"display: block;\"><span>' + title + '<span class=\"iconfont icon-select m-list-title-select\"></span></span></div>';\r\n                    html += '<div class=\"m-icon-list\"><div><ul>';\r\n                    $.each(list.data, (key, val) => {\r\n                        html += '<li><a href=\"' + val[1] + '\">';\r\n                        html += '<span class=\"iconfont '+ list.icon +'\" style=\"color: #888;font-size: 14px;margin-right: 5px;\"></span>';\r\n                        html += val[0] + '</a></li>';\r\n                    });\r\n                    html += '</ul></div></div>';\r\n                    // language=JQuery-CSS\r\n                    $('#menuCustomList').append(html);\r\n                });\r\n            }\r\n        })();\r\n\r\n        // ------- 公共函数 -------\r\n        function listHdl(old, nld, icon, tid) {\r\n            if (old.length > 0 && nld.html() === '') {\r\n                nld.html(getMenuData(old, icon)).prev('.m-list-title').show();\r\n                _.__tools.clearIntervalTimeId(tid);\r\n            }\r\n        }\r\n\r\n        function getMenuData(obj, icon) {\r\n            let html = '<div><ul>',\r\n                ret  = /^[1-9]+[0-9]*$/;\r\n            obj.each((i) => {\r\n                let p = $(obj[i]),\r\n                    o = p.text() === p.html() ? {} : $(p.html()),\r\n                    textArr = $.trim(p.text()).split('.');\r\n                if (ret.test(textArr[0])) textArr.splice(0,1);\r\n                let text = $.trim(textArr.join('.')),\r\n                    iconHtml = '<span class=\"iconfont '+icon+'\" style=\"color: #888;font-size: 14px;margin-right: 5px;\"></span>';\r\n                o.length > 0 && o.html(iconHtml + text);\r\n                html += '<li>' + (o.length > 0 ?  o.prop(\"outerHTML\") : \"<a href='javascript:void(0);'>\" + iconHtml + text + \"</a>\") + '</li>';\r\n            });\r\n            html += '</ul></div>';\r\n            return html;\r\n        }\r\n    })();\r\n\r\n    /**\r\n     * 设置菜单展开收缩\r\n     */\r\n    (() => {\r\n        $('.m-list-title-select').click(function () { $(this).parents('.m-list-title').next('.m-icon-list').slideToggle(350) });\r\n    })();\r\n}\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/components/sidebar/sidebar.js?")},"./src/hooks/afterLoading.js":
/*!***********************************!*\
  !*** ./src/hooks/afterLoading.js ***!
  \***********************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": function() { return /* binding */ main; }\n/* harmony export */ });\n/**\r\n * UPDATES AND DOCS AT: https://github.com/BNDong\r\n * https://www.cnblogs.com/bndong/\r\n * @author: BNDong, dbnuo@foxmail.com\r\n * ----------------------------------------------\r\n * @describe: loading 结束后\r\n */\r\n\r\nfunction main(_) {\r\n    if (typeof _.__config.hooks.afterLoading === "function")\r\n        _.__config.hooks.afterLoading(_);\r\n}\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/hooks/afterLoading.js?')},"./src/hooks/beforeLoading.js":
/*!************************************!*\
  !*** ./src/hooks/beforeLoading.js ***!
  \************************************/function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": function() { return /* binding */ main; }\n/* harmony export */ });\n/**\r\n * UPDATES AND DOCS AT: https://github.com/BNDong\r\n * https://www.cnblogs.com/bndong/\r\n * @author: BNDong, dbnuo@foxmail.com\r\n * ----------------------------------------------\r\n * @describe: loading 开始前\r\n */\r\n\r\nfunction main(_) {\r\n    if (typeof _.__config.hooks.beforeLoading === "function")\r\n        _.__config.hooks.beforeLoading(_);\r\n}\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/hooks/beforeLoading.js?')},"./src/vendor/rotate/jquery.rotate.min.js":
/*!************************************************!*\
  !*** ./src/vendor/rotate/jquery.rotate.min.js ***!
  \************************************************/function(){eval('// VERSION: 2.3 LAST UPDATE: 11.07.2013\r\n/* \r\n * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php\r\n * \r\n * Made by Wilq32, wilq32@gmail.com, Wroclaw, Poland, 01.2009\r\n * Website: http://code.google.com/p/jqueryrotate/ \r\n */\r\n(function(k){for(var d,f,l=document.getElementsByTagName("head")[0].style,h=["transformProperty","WebkitTransform","OTransform","msTransform","MozTransform"],g=0;g<h.length;g++)void 0!==l[h[g]]&&(d=h[g]);d&&(f=d.replace(/[tT]ransform/,"TransformOrigin"),"T"==f[0]&&(f[0]="t"));eval(\'IE = "v"=="\\v"\');jQuery.fn.extend({rotate:function(a){if(0!==this.length&&"undefined"!=typeof a){"number"==typeof a&&(a={angle:a});for(var b=[],c=0,d=this.length;c<d;c++){var e=this.get(c);if(e.Wilq32&&e.Wilq32.PhotoEffect)e.Wilq32.PhotoEffect._handleRotation(a);\r\nelse{var f=k.extend(!0,{},a),e=(new Wilq32.PhotoEffect(e,f))._rootObj;b.push(k(e))}}return b}},getRotateAngle:function(){for(var a=[],b=0,c=this.length;b<c;b++){var d=this.get(b);d.Wilq32&&d.Wilq32.PhotoEffect&&(a[b]=d.Wilq32.PhotoEffect._angle)}return a},stopRotate:function(){for(var a=0,b=this.length;a<b;a++){var c=this.get(a);c.Wilq32&&c.Wilq32.PhotoEffect&&clearTimeout(c.Wilq32.PhotoEffect._timer)}}});Wilq32=window.Wilq32||{};Wilq32.PhotoEffect=function(){return d?function(a,b){a.Wilq32={PhotoEffect:this};\r\nthis._img=this._rootObj=this._eventObj=a;this._handleRotation(b)}:function(a,b){this._img=a;this._onLoadDelegate=[b];this._rootObj=document.createElement("span");this._rootObj.style.display="inline-block";this._rootObj.Wilq32={PhotoEffect:this};a.parentNode.insertBefore(this._rootObj,a);if(a.complete)this._Loader();else{var c=this;jQuery(this._img).bind("load",function(){c._Loader()})}}}();Wilq32.PhotoEffect.prototype={_setupParameters:function(a){this._parameters=this._parameters||{};"number"!==\r\ntypeof this._angle&&(this._angle=0);"number"===typeof a.angle&&(this._angle=a.angle);this._parameters.animateTo="number"===typeof a.animateTo?a.animateTo:this._angle;this._parameters.step=a.step||this._parameters.step||null;this._parameters.easing=a.easing||this._parameters.easing||this._defaultEasing;this._parameters.duration=a.duration||this._parameters.duration||1E3;this._parameters.callback=a.callback||this._parameters.callback||this._emptyFunction;this._parameters.center=a.center||this._parameters.center||\r\n["50%","50%"];this._rotationCenterX="string"==typeof this._parameters.center[0]?parseInt(this._parameters.center[0],10)/100*this._imgWidth*this._aspectW:this._parameters.center[0];this._rotationCenterY="string"==typeof this._parameters.center[1]?parseInt(this._parameters.center[1],10)/100*this._imgHeight*this._aspectH:this._parameters.center[1];a.bind&&a.bind!=this._parameters.bind&&this._BindEvents(a.bind)},_emptyFunction:function(){},_defaultEasing:function(a,b,c,d,e){return-d*((b=b/e-1)*b*b*b-\r\n1)+c},_handleRotation:function(a,b){d||this._img.complete||b?(this._setupParameters(a),this._angle==this._parameters.animateTo?this._rotate(this._angle):this._animateStart()):this._onLoadDelegate.push(a)},_BindEvents:function(a){if(a&&this._eventObj){if(this._parameters.bind){var b=this._parameters.bind,c;for(c in b)b.hasOwnProperty(c)&&jQuery(this._eventObj).unbind(c,b[c])}this._parameters.bind=a;for(c in a)a.hasOwnProperty(c)&&jQuery(this._eventObj).bind(c,a[c])}},_Loader:function(){return IE?function(){var a=\r\nthis._img.width,b=this._img.height;this._imgWidth=a;this._imgHeight=b;this._img.parentNode.removeChild(this._img);this._vimage=this.createVMLNode("image");this._vimage.src=this._img.src;this._vimage.style.height=b+"px";this._vimage.style.width=a+"px";this._vimage.style.position="absolute";this._vimage.style.top="0px";this._vimage.style.left="0px";this._aspectW=this._aspectH=1;this._container=this.createVMLNode("group");this._container.style.width=a;this._container.style.height=b;this._container.style.position=\r\n"absolute";this._container.style.top="0px";this._container.style.left="0px";this._container.setAttribute("coordsize",a-1+","+(b-1));this._container.appendChild(this._vimage);this._rootObj.appendChild(this._container);this._rootObj.style.position="relative";this._rootObj.style.width=a+"px";this._rootObj.style.height=b+"px";this._rootObj.setAttribute("id",this._img.getAttribute("id"));this._rootObj.className=this._img.className;for(this._eventObj=this._rootObj;a=this._onLoadDelegate.shift();)this._handleRotation(a,\r\n!0)}:function(){this._rootObj.setAttribute("id",this._img.getAttribute("id"));this._rootObj.className=this._img.className;this._imgWidth=this._img.naturalWidth;this._imgHeight=this._img.naturalHeight;var a=Math.sqrt(this._imgHeight*this._imgHeight+this._imgWidth*this._imgWidth);this._width=3*a;this._height=3*a;this._aspectW=this._img.offsetWidth/this._img.naturalWidth;this._aspectH=this._img.offsetHeight/this._img.naturalHeight;this._img.parentNode.removeChild(this._img);this._canvas=document.createElement("canvas");\r\nthis._canvas.setAttribute("width",this._width);this._canvas.style.position="relative";this._canvas.style.left=-this._img.height*this._aspectW+"px";this._canvas.style.top=-this._img.width*this._aspectH+"px";this._canvas.Wilq32=this._rootObj.Wilq32;this._rootObj.appendChild(this._canvas);this._rootObj.style.width=this._img.width*this._aspectW+"px";this._rootObj.style.height=this._img.height*this._aspectH+"px";this._eventObj=this._canvas;for(this._cnv=this._canvas.getContext("2d");a=this._onLoadDelegate.shift();)this._handleRotation(a,\r\n!0)}}(),_animateStart:function(){this._timer&&clearTimeout(this._timer);this._animateStartTime=+new Date;this._animateStartAngle=this._angle;this._animate()},_animate:function(){var a=+new Date,b=a-this._animateStartTime>this._parameters.duration;if(b&&!this._parameters.animatedGif)clearTimeout(this._timer);else{if(this._canvas||this._vimage||this._img)a=this._parameters.easing(0,a-this._animateStartTime,this._animateStartAngle,this._parameters.animateTo-this._animateStartAngle,this._parameters.duration),\r\nthis._rotate(~~(10*a)/10);this._parameters.step&&this._parameters.step(this._angle);var c=this;this._timer=setTimeout(function(){c._animate.call(c)},10)}this._parameters.callback&&b&&(this._angle=this._parameters.animateTo,this._rotate(this._angle),this._parameters.callback.call(this._rootObj))},_rotate:function(){var a=Math.PI/180;return IE?function(a){this._angle=a;this._container.style.rotation=a%360+"deg";this._vimage.style.top=-(this._rotationCenterY-this._imgHeight/2)+"px";this._vimage.style.left=\r\n-(this._rotationCenterX-this._imgWidth/2)+"px";this._container.style.top=this._rotationCenterY-this._imgHeight/2+"px";this._container.style.left=this._rotationCenterX-this._imgWidth/2+"px"}:d?function(a){this._angle=a;this._img.style[d]="rotate("+a%360+"deg)";this._img.style[f]=this._parameters.center.join(" ")}:function(b){this._angle=b;b=b%360*a;this._canvas.width=this._width;this._canvas.height=this._height;this._cnv.translate(this._imgWidth*this._aspectW,this._imgHeight*this._aspectH);this._cnv.translate(this._rotationCenterX,\r\nthis._rotationCenterY);this._cnv.rotate(b);this._cnv.translate(-this._rotationCenterX,-this._rotationCenterY);this._cnv.scale(this._aspectW,this._aspectH);this._cnv.drawImage(this._img,0,0)}}()};IE&&(Wilq32.PhotoEffect.prototype.createVMLNode=function(){document.createStyleSheet().addRule(".rvml","behavior:url(#default#VML)");try{return!document.namespaces.rvml&&document.namespaces.add("rvml","urn:schemas-microsoft-com:vml"),function(a){return document.createElement("<rvml:"+a+\' class="rvml">\')}}catch(a){return function(a){return document.createElement("<"+\r\na+\' xmlns="urn:schemas-microsoft.com:vml" class="rvml">\')}}}())})(jQuery);\r\n\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/vendor/rotate/jquery.rotate.min.js?')},"./src/images/webp/default_avatar.webp":
/*!*********************************************!*\
  !*** ./src/images/webp/default_avatar.webp ***!
  \*********************************************/function(module,__unused_webpack_exports,__webpack_require__){"use strict";eval('module.exports = __webpack_require__.p + "images/53abc64338825f4038d6.webp";\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/images/webp/default_avatar.webp?')},"./src/images/webp/home_top_bg.webp":
/*!******************************************!*\
  !*** ./src/images/webp/home_top_bg.webp ***!
  \******************************************/function(module,__unused_webpack_exports,__webpack_require__){"use strict";eval('module.exports = __webpack_require__.p + "images/e58d9f9d0eee6d9b9add.webp";\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/images/webp/home_top_bg.webp?')},"./src/images/webp/me_top_bg.webp":
/*!****************************************!*\
  !*** ./src/images/webp/me_top_bg.webp ***!
  \****************************************/function(module,__unused_webpack_exports,__webpack_require__){"use strict";eval('module.exports = __webpack_require__.p + "images/82deab5871314fe2ef83.webp";\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/images/webp/me_top_bg.webp?')},"./src/images/webp/nothome_top_bg.webp":
/*!*********************************************!*\
  !*** ./src/images/webp/nothome_top_bg.webp ***!
  \*********************************************/function(module,__unused_webpack_exports,__webpack_require__){"use strict";eval('module.exports = __webpack_require__.p + "images/6d995b207bae4175ff28.webp";\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/images/webp/nothome_top_bg.webp?')},"./src/images/webp/rss.webp":
/*!**********************************!*\
  !*** ./src/images/webp/rss.webp ***!
  \**********************************/function(module,__unused_webpack_exports,__webpack_require__){"use strict";eval('module.exports = __webpack_require__.p + "images/48be92afda99734e94c9.webp";\n\n//# sourceURL=webpack://Cnblogs-Theme-SimpleMemory/./src/images/webp/rss.webp?')}}]);